// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: faro/proto/face_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Faro.Proto {

  /// <summary>Holder for reflection information generated from faro/proto/face_service.proto</summary>
  public static partial class FaceServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for faro/proto/face_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FaceServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1mYXJvL3Byb3RvL2ZhY2Vfc2VydmljZS5wcm90bxoWZmFyby9wcm90by9p",
            "bWFnZS5wcm90bxoZZmFyby9wcm90by9nZW9tZXRyeS5wcm90byKNAgoJQXR0",
            "cmlidXRlEgsKA2tleRgBIAEoCRITCgtkZXNjcmlwdGlvbhgCIAEoCRIOCgZi",
            "dWZmZXIYAyABKAwSDgoGZnZhbHVlGAQgASgCEg4KBml2YWx1ZRgFIAEoBRIM",
            "CgR0ZXh0GAYgASgJEg4KBnBpY2tsZRgHIAEoDBIMCgRqc29uGAggASgMEhcK",
            "Bm1hdHJpeBgJIAEoCzIHLk1hdHJpeBIXCgZ2ZWN0b3IYCiABKAsyBy5WZWN0",
            "b3ISFQoFaW1hZ2UYCyABKAsyBi5JbWFnZRIXCgVwb2ludBgMIAEoCzIILlBv",
            "aW50MkQSEwoEcmVjdBgNIAEoCzIFLlJlY3QSCwoDeG1sGA4gASgMIjkKDEVy",
            "cm9yTWVzc2FnZRISCgplcnJvcl9jb2RlGAMgASgFEhUKDWVycm9yX21lc3Nh",
            "Z2UYBCABKAkiggEKCURldGVjdGlvbhINCgVzY29yZRgBIAEoAhIXCghsb2Nh",
            "dGlvbhgCIAEoCzIFLlJlY3QSFAoMZGV0ZWN0aW9uX2lkGAMgASgFEhcKD2Rl",
            "dGVjdGlvbl9jbGFzcxgEIAEoCRIeCgphdHRyaWJ1dGVzGAUgAygLMgouQXR0",
            "cmlidXRlIjsKCExhbmRtYXJrEhMKC2xhbmRtYXJrX2lkGAEgASgJEhoKCGxv",
            "Y2F0aW9uGAIgASgLMgguUG9pbnQyRCLhAQoQRGV0ZWN0aW9uT3B0aW9ucxIU",
            "CgxhbGdvcml0aG1faWQYASABKAkSDAoEYmVzdBgCIAEoCBIRCgl0aHJlc2hv",
            "bGQYAyABKAISFAoMc2NhbGVfbGV2ZWxzGAQgASgFEhMKC3NjYW5fbGV2ZWxz",
            "GAUgASgFEhQKDHNjYW5fb3ZlcmxhcBgGIAEoAhIQCghtaW5fc2l6ZRgHIAEo",
            "BRIUCgxzYXZlX3JlcXVlc3QYCSABKAgSDQoFZGVidWcYCiABKAgSHgoKYXR0",
            "cmlidXRlcxgIIAMoCzIKLkF0dHJpYnV0ZSJrCg5FeHRyYWN0T3B0aW9ucxIU",
            "CgxhbGdvcml0aG1faWQYASABKAkSFAoMc2F2ZV9yZXF1ZXN0GAIgASgIEg0K",
            "BWRlYnVnGAMgASgIEh4KCmF0dHJpYnV0ZXMYCCADKAsyCi5BdHRyaWJ1dGUi",
            "VAoNRW5yb2xsT3B0aW9ucxIUCgxzYXZlX3JlcXVlc3QYAiABKAgSDQoFZGVi",
            "dWcYAyABKAgSHgoKYXR0cmlidXRlcxgIIAMoCzIKLkF0dHJpYnV0ZSKvAQoN",
            "RGV0ZWN0aW9uTGlzdBIeCgpkZXRlY3Rpb25zGAEgAygLMgouRGV0ZWN0aW9u",
            "EhYKDmRldGVjdGlvbl90aW1lGAIgASgCEhMKC2ltYWdlX3dpZHRoGAMgASgF",
            "EhQKDGltYWdlX2hlaWdodBgEIAEoBRIXCg9kZXRlY3Rpb25fY291bnQYBSAB",
            "KAUSIgoHb3B0aW9ucxgGIAEoCzIRLkRldGVjdGlvbk9wdGlvbnMiKwoJTWF0",
            "Y2hMaXN0Eh4KCm1hdGNoX2xpc3QYASADKAsyCi5NYXRjaEluZm8iggEKCU1h",
            "dGNoSW5mbxINCgVzY29yZRgBIAEoAhIQCghpbWFnZV9pZBgCIAEoCRIUCgxk",
            "ZXRlY3Rpb25faWQYAyABKAkSEgoKc3ViamVjdF9pZBgEIAEoCRIUCgxzdWJq",
            "ZWN0X25hbWUYBSABKAkSFAoEZmFjZRgGIAEoCzIGLkltYWdlIj4KDVRlbXBs",
            "YXRlSW5wdXQSEgoCaW0YASABKAsyBi5JbWFnZRIZCgpkZXRlY3Rpb25zGAIg",
            "AygLMgUuUmVjdCI1CgxGYWNlVGVtcGxhdGUSFQoEZGF0YRgBIAEoCzIHLlZl",
            "Y3RvchIOCgZidWZmZXIYAiABKAwiMAoMVGVtcGxhdGVMaXN0EiAKCXRlbXBs",
            "YXRlcxgBIAMoCzINLkZhY2VUZW1wbGF0ZSJhCgxBY2Nlc3NSZWNvcmQSEAoI",
            "ZGF0ZXRpbWUYASABKAISDQoFbm90ZXMYAiABKAkSEgoKY3JlZGVudGlhbBgD",
            "IAEoCRIcCghtZXRhZGF0YRgEIAMoCzIKLkF0dHJpYnV0ZSLwAwoKRmFjZVJl",
            "Y29yZBISCgpzdWJqZWN0X2lkGAEgASgJEgwKBG5hbWUYBSABKAkSDgoGc291",
            "cmNlGAQgASgJEg0KBWZyYW1lGA4gASgDEg0KBW5vdGVzGAYgASgJEhMKC2dh",
            "bGxlcnlfa2V5GA8gASgJEhcKD2NvbGxlY3Rpb25fZGF0ZRgQIAEoAhIXCg9l",
            "bnJvbGxtZW50X2RhdGUYESABKAISHAoIbWV0YWRhdGEYEiADKAsyCi5BdHRy",
            "aWJ1dGUSJQoOYWNjZXNzX3JlY29yZHMYEyADKAsyDS5BY2Nlc3NSZWNvcmQS",
            "FAoEdmlldxgHIAEoCzIGLkltYWdlEhcKB2FsaWduZWQYCSABKAsyBi5JbWFn",
            "ZRIdCglkZXRlY3Rpb24YAiABKAsyCi5EZXRlY3Rpb24SHAoJbGFuZG1hcmtz",
            "GAggAygLMgkuTGFuZG1hcmsSHgoKYXR0cmlidXRlcxgKIAMoCzIKLkF0dHJp",
            "YnV0ZRIhCg1pbnRlcm5hbF9kYXRhGAsgAygLMgouQXR0cmlidXRlEh8KCHRl",
            "bXBsYXRlGAMgASgLMg0uRmFjZVRlbXBsYXRlEg0KBXNjb3JlGAwgASgCEicK",
            "DnNlYXJjaF9yZXN1bHRzGA0gASgLMg8uRmFjZVJlY29yZExpc3QiMwoORmFj",
            "ZVJlY29yZExpc3QSIQoMZmFjZV9yZWNvcmRzGAEgAygLMgsuRmFjZVJlY29y",
            "ZCJcChNWZXJpZmljYXRpb25SZXF1ZXN0Eg8KB2dhbGxlcnkYASABKAkSEgoK",
            "c3ViamVjdF9pZBgCIAEoCRIgCgtmYWNlX3JlY29yZBgDIAMoCzILLkZhY2VS",
            "ZWNvcmQihAEKFFZlcmlmaWNhdGlvblJlc3BvbnNlEhIKCmVycm9yX2NvZGUY",
            "BCABKAUSFQoNZXJyb3JfbWVzc2FnZRgFIAEoCRIPCgdzdWNjZXNzGAEgASgI",
            "EhIKCmNvbmZpZGVuY2UYAiABKAISHAoHbWF0Y2hlcxgDIAMoCzILLkZhY2VS",
            "ZWNvcmQicAoNU2VhcmNoUmVxdWVzdBIWCg5zZWFyY2hfZ2FsbGVyeRgBIAEo",
            "CRIfCgZwcm9iZXMYAyABKAsyDy5GYWNlUmVjb3JkTGlzdBITCgttYXhfcmVz",
            "dWx0cxgEIAEoBRIRCgl0aHJlc2hvbGQYBSABKAIiUQoOU2VhcmNoUmVzcG9u",
            "c2USHgoHbWVzc2FnZRgBIAEoCzINLkVycm9yTWVzc2FnZRIfCgZwcm9iZXMY",
            "AiABKAsyDy5GYWNlUmVjb3JkTGlzdCJxCg1FbnJvbGxSZXF1ZXN0EhYKDmVu",
            "cm9sbF9nYWxsZXJ5GAEgASgJEiAKB3JlY29yZHMYAiABKAsyDy5GYWNlUmVj",
            "b3JkTGlzdBImCg5lbnJvbGxfb3B0aW9ucxgKIAEoCzIOLkVucm9sbE9wdGlv",
            "bnMimgEKDURldGVjdFJlcXVlc3QSFQoFaW1hZ2UYASABKAsyBi5JbWFnZRIO",
            "CgZzb3VyY2UYAiABKAkSDQoFZnJhbWUYAyABKAMSEgoKc3ViamVjdF9pZBgE",
            "IAEoCRIUCgxzdWJqZWN0X25hbWUYBSABKAkSKQoOZGV0ZWN0X29wdGlvbnMY",
            "CCABKAsyES5EZXRlY3Rpb25PcHRpb25zInMKDkV4dHJhY3RSZXF1ZXN0EhUK",
            "BWltYWdlGAEgASgLMgYuSW1hZ2USIAoHcmVjb3JkcxgEIAEoCzIPLkZhY2VS",
            "ZWNvcmRMaXN0EigKD2V4dHJhY3Rfb3B0aW9ucxgJIAEoCzIPLkV4dHJhY3RP",
            "cHRpb25zIqwBCgxTY29yZVJlcXVlc3QSJAoLZmFjZV9wcm9iZXMYASABKAsy",
            "Dy5GYWNlUmVjb3JkTGlzdBIlCgxmYWNlX2dhbGxlcnkYAiABKAsyDy5GYWNl",
            "UmVjb3JkTGlzdBImCg90ZW1wbGF0ZV9wcm9iZXMYAyABKAsyDS5UZW1wbGF0",
            "ZUxpc3QSJwoQdGVtcGxhdGVfZ2FsbGVyeRgEIAEoCzINLlRlbXBsYXRlTGlz",
            "dCJoChREZXRlY3RFeHRyYWN0UmVxdWVzdBImCg5kZXRlY3RfcmVxdWVzdBgB",
            "IAEoCzIOLkRldGVjdFJlcXVlc3QSKAoPZXh0cmFjdF9yZXF1ZXN0GAIgASgL",
            "Mg8uRXh0cmFjdFJlcXVlc3QilgEKGkRldGVjdEV4dHJhY3RFbnJvbGxSZXF1",
            "ZXN0EiYKDmRldGVjdF9yZXF1ZXN0GAEgASgLMg4uRGV0ZWN0UmVxdWVzdBIo",
            "Cg9leHRyYWN0X3JlcXVlc3QYAiABKAsyDy5FeHRyYWN0UmVxdWVzdBImCg5l",
            "bnJvbGxfcmVxdWVzdBgDIAEoCzIOLkVucm9sbFJlcXVlc3QilgEKGkRldGVj",
            "dEV4dHJhY3RTZWFyY2hSZXF1ZXN0EiYKDmRldGVjdF9yZXF1ZXN0GAEgASgL",
            "Mg4uRGV0ZWN0UmVxdWVzdBIoCg9leHRyYWN0X3JlcXVlc3QYAiABKAsyDy5F",
            "eHRyYWN0UmVxdWVzdBImCg5zZWFyY2hfcmVxdWVzdBgDIAEoCzIOLlNlYXJj",
            "aFJlcXVlc3QiEwoRRmFjZVN0YXR1c1JlcXVlc3QipQIKD0ZhY2VTZXJ2aWNl",
            "SW5mbxIeCgZzdGF0dXMYASABKA4yDi5TZXJ2aWNlU3RhdHVzEhQKDHdvcmtl",
            "cl9jb3VudBgCIAEoBRIZChFkZXRlY3Rpb25fc3VwcG9ydBgDIAEoCBIXCg9l",
            "eHRyYWN0X3N1cHBvcnQYBCABKAgSFQoNc2NvcmVfc3VwcG9ydBgFIAEoCBIZ",
            "ChFhdHRyaWJ1dGVfc3VwcG9ydBgGIAEoCBIeCgpzY29yZV90eXBlGAcgASgO",
            "MgouU2NvcmVUeXBlEhsKE2RldGVjdGlvbl90aHJlc2hvbGQYCCABKAISFwoP",
            "bWF0Y2hfdGhyZXNob2xkGAkgASgCEhEKCWFsZ29yaXRobRgKIAEoCRINCgVu",
            "b3RlcxgLIAEoCSIUChJHYWxsZXJ5TGlzdFJlcXVlc3QiLAoUR2FsbGVyeURl",
            "bGV0ZVJlcXVlc3QSFAoMZ2FsbGVyeV9uYW1lGAEgASgJIi0KFUVucm9sbG1l",
            "bnRMaXN0UmVxdWVzdBIUCgxnYWxsZXJ5X25hbWUYASABKAkiRgoORW5yb2xs",
            "bWVudEluZm8SEgoKc3ViamVjdF9pZBgBIAEoCRIMCgRuYW1lGAIgASgJEhIK",
            "CmZhY2VfY291bnQYAyABKAUiVAoWRW5yb2xsbWVudExpc3RSZXNwb25zZRIU",
            "CgxnYWxsZXJ5X25hbWUYASABKAkSJAoLZW5yb2xsbWVudHMYAiADKAsyDy5F",
            "bnJvbGxtZW50SW5mbyJDChdFbnJvbGxtZW50RGVsZXRlUmVxdWVzdBIUCgxn",
            "YWxsZXJ5X25hbWUYASABKAkSEgoKc3ViamVjdF9pZBgCIAEoCSI3CgtHYWxs",
            "ZXJ5SW5mbxIUCgxnYWxsZXJ5X25hbWUYASABKAkSEgoKZmFjZV9jb3VudBgC",
            "IAEoAyIuCgtHYWxsZXJ5TGlzdBIfCglnYWxsZXJpZXMYASADKAsyDC5HYWxs",
            "ZXJ5SW5mbyIHCgVFbXB0eSo8Cg1TZXJ2aWNlU3RhdHVzEgsKB1VOS05PV04Q",
            "ABIJCgVSRUFEWRABEgkKBUVSUk9SEAISCAoEQlVTWRADKmsKCERhdGFUeXBl",
            "EgkKBUVNUFRZEAASCgoGU1RSSU5HEAESBwoDSU5UEAISCQoFRkxPQVQQAxIJ",
            "CgVCWVRFUxAEEgoKBlZFQ1RPUhAFEgoKBlBJQ0tMRRAGEgcKA1hNTBAHEggK",
            "BEpTT04QCCo0CglTY29yZVR5cGUSCgoGU0VSVkVSEAASBgoCTDEQARIGCgJM",
            "MhACEgsKB05FR19ET1QQAzL0BgoPRmFjZVJlY29nbml0aW9uEjAKBnN0YXR1",
            "cxISLkZhY2VTdGF0dXNSZXF1ZXN0GhAuRmFjZVNlcnZpY2VJbmZvIgASKwoG",
            "ZGV0ZWN0Eg4uRGV0ZWN0UmVxdWVzdBoPLkZhY2VSZWNvcmRMaXN0IgASLQoH",
            "ZXh0cmFjdBIPLkV4dHJhY3RSZXF1ZXN0Gg8uRmFjZVJlY29yZExpc3QiABIh",
            "CgVzY29yZRINLlNjb3JlUmVxdWVzdBoHLk1hdHJpeCIAEisKBmVucm9sbBIO",
            "LkVucm9sbFJlcXVlc3QaDy5GYWNlUmVjb3JkTGlzdCIAEisKBnNlYXJjaBIO",
            "LlNlYXJjaFJlcXVlc3QaDy5GYWNlUmVjb3JkTGlzdCIAEjkKDWRldGVjdEV4",
            "dHJhY3QSFS5EZXRlY3RFeHRyYWN0UmVxdWVzdBoPLkZhY2VSZWNvcmRMaXN0",
            "IgASRQoTZGV0ZWN0RXh0cmFjdEVucm9sbBIbLkRldGVjdEV4dHJhY3RFbnJv",
            "bGxSZXF1ZXN0Gg8uRmFjZVJlY29yZExpc3QiABJFChNkZXRlY3RFeHRyYWN0",
            "U2VhcmNoEhsuRGV0ZWN0RXh0cmFjdFNlYXJjaFJlcXVlc3QaDy5GYWNlUmVj",
            "b3JkTGlzdCIAEjIKC2dhbGxlcnlMaXN0EhMuR2FsbGVyeUxpc3RSZXF1ZXN0",
            "GgwuR2FsbGVyeUxpc3QiABIwCg1nYWxsZXJ5RGVsZXRlEhUuR2FsbGVyeURl",
            "bGV0ZVJlcXVlc3QaBi5FbXB0eSIAEjsKDmVucm9sbG1lbnRMaXN0EhYuRW5y",
            "b2xsbWVudExpc3RSZXF1ZXN0Gg8uRmFjZVJlY29yZExpc3QiABI/ChBlbnJv",
            "bGxtZW50RGVsZXRlEhguRW5yb2xsbWVudERlbGV0ZVJlcXVlc3QaDy5GYWNl",
            "UmVjb3JkTGlzdCIAEkoKG2Vucm9sbG1lbnREZWxldGVDb25kaXRpb25hbBIY",
            "LkVucm9sbG1lbnREZWxldGVSZXF1ZXN0Gg8uRmFjZVJlY29yZExpc3QiABJB",
            "ChJlbnJvbGxtZW50VHJhbnNmZXISGC5FbnJvbGxtZW50RGVsZXRlUmVxdWVz",
            "dBoPLkZhY2VSZWNvcmRMaXN0IgASGgoEZWNobxIHLk1hdHJpeBoHLk1hdHJp",
            "eCIAQg2qAgpGYXJvLlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Faro.Proto.ImageReflection.Descriptor, global::Faro.Proto.GeometryReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Faro.Proto.ServiceStatus), typeof(global::Faro.Proto.DataType), typeof(global::Faro.Proto.ScoreType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.Attribute), global::Faro.Proto.Attribute.Parser, new[]{ "Key", "Description", "Buffer", "Fvalue", "Ivalue", "Text", "Pickle", "Json", "Matrix", "Vector", "Image", "Point", "Rect", "Xml" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.ErrorMessage), global::Faro.Proto.ErrorMessage.Parser, new[]{ "ErrorCode", "ErrorMessage_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.Detection), global::Faro.Proto.Detection.Parser, new[]{ "Score", "Location", "DetectionId", "DetectionClass", "Attributes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.Landmark), global::Faro.Proto.Landmark.Parser, new[]{ "LandmarkId", "Location" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.DetectionOptions), global::Faro.Proto.DetectionOptions.Parser, new[]{ "AlgorithmId", "Best", "Threshold", "ScaleLevels", "ScanLevels", "ScanOverlap", "MinSize", "SaveRequest", "Debug", "Attributes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.ExtractOptions), global::Faro.Proto.ExtractOptions.Parser, new[]{ "AlgorithmId", "SaveRequest", "Debug", "Attributes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.EnrollOptions), global::Faro.Proto.EnrollOptions.Parser, new[]{ "SaveRequest", "Debug", "Attributes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.DetectionList), global::Faro.Proto.DetectionList.Parser, new[]{ "Detections", "DetectionTime", "ImageWidth", "ImageHeight", "DetectionCount", "Options" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.MatchList), global::Faro.Proto.MatchList.Parser, new[]{ "MatchList_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.MatchInfo), global::Faro.Proto.MatchInfo.Parser, new[]{ "Score", "ImageId", "DetectionId", "SubjectId", "SubjectName", "Face" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.TemplateInput), global::Faro.Proto.TemplateInput.Parser, new[]{ "Im", "Detections" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.FaceTemplate), global::Faro.Proto.FaceTemplate.Parser, new[]{ "Data", "Buffer" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.TemplateList), global::Faro.Proto.TemplateList.Parser, new[]{ "Templates" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.AccessRecord), global::Faro.Proto.AccessRecord.Parser, new[]{ "Datetime", "Notes", "Credential", "Metadata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.FaceRecord), global::Faro.Proto.FaceRecord.Parser, new[]{ "SubjectId", "Name", "Source", "Frame", "Notes", "GalleryKey", "CollectionDate", "EnrollmentDate", "Metadata", "AccessRecords", "View", "Aligned", "Detection", "Landmarks", "Attributes", "InternalData", "Template", "Score", "SearchResults" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.FaceRecordList), global::Faro.Proto.FaceRecordList.Parser, new[]{ "FaceRecords" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.VerificationRequest), global::Faro.Proto.VerificationRequest.Parser, new[]{ "Gallery", "SubjectId", "FaceRecord" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.VerificationResponse), global::Faro.Proto.VerificationResponse.Parser, new[]{ "ErrorCode", "ErrorMessage", "Success", "Confidence", "Matches" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.SearchRequest), global::Faro.Proto.SearchRequest.Parser, new[]{ "SearchGallery", "Probes", "MaxResults", "Threshold" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.SearchResponse), global::Faro.Proto.SearchResponse.Parser, new[]{ "Message", "Probes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.EnrollRequest), global::Faro.Proto.EnrollRequest.Parser, new[]{ "EnrollGallery", "Records", "EnrollOptions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.DetectRequest), global::Faro.Proto.DetectRequest.Parser, new[]{ "Image", "Source", "Frame", "SubjectId", "SubjectName", "DetectOptions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.ExtractRequest), global::Faro.Proto.ExtractRequest.Parser, new[]{ "Image", "Records", "ExtractOptions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.ScoreRequest), global::Faro.Proto.ScoreRequest.Parser, new[]{ "FaceProbes", "FaceGallery", "TemplateProbes", "TemplateGallery" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.DetectExtractRequest), global::Faro.Proto.DetectExtractRequest.Parser, new[]{ "DetectRequest", "ExtractRequest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.DetectExtractEnrollRequest), global::Faro.Proto.DetectExtractEnrollRequest.Parser, new[]{ "DetectRequest", "ExtractRequest", "EnrollRequest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.DetectExtractSearchRequest), global::Faro.Proto.DetectExtractSearchRequest.Parser, new[]{ "DetectRequest", "ExtractRequest", "SearchRequest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.FaceStatusRequest), global::Faro.Proto.FaceStatusRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.FaceServiceInfo), global::Faro.Proto.FaceServiceInfo.Parser, new[]{ "Status", "WorkerCount", "DetectionSupport", "ExtractSupport", "ScoreSupport", "AttributeSupport", "ScoreType", "DetectionThreshold", "MatchThreshold", "Algorithm", "Notes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.GalleryListRequest), global::Faro.Proto.GalleryListRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.GalleryDeleteRequest), global::Faro.Proto.GalleryDeleteRequest.Parser, new[]{ "GalleryName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.EnrollmentListRequest), global::Faro.Proto.EnrollmentListRequest.Parser, new[]{ "GalleryName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.EnrollmentInfo), global::Faro.Proto.EnrollmentInfo.Parser, new[]{ "SubjectId", "Name", "FaceCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.EnrollmentListResponse), global::Faro.Proto.EnrollmentListResponse.Parser, new[]{ "GalleryName", "Enrollments" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.EnrollmentDeleteRequest), global::Faro.Proto.EnrollmentDeleteRequest.Parser, new[]{ "GalleryName", "SubjectId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.GalleryInfo), global::Faro.Proto.GalleryInfo.Parser, new[]{ "GalleryName", "FaceCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.GalleryList), global::Faro.Proto.GalleryList.Parser, new[]{ "Galleries" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Faro.Proto.Empty), global::Faro.Proto.Empty.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ServiceStatus {
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("READY")] Ready = 1,
    [pbr::OriginalName("ERROR")] Error = 2,
    [pbr::OriginalName("BUSY")] Busy = 3,
  }

  public enum DataType {
    [pbr::OriginalName("EMPTY")] Empty = 0,
    [pbr::OriginalName("STRING")] String = 1,
    /// <summary>
    /// stored as string
    /// </summary>
    [pbr::OriginalName("INT")] Int = 2,
    /// <summary>
    /// stored as string
    /// </summary>
    [pbr::OriginalName("FLOAT")] Float = 3,
    /// <summary>
    /// raw data
    /// </summary>
    [pbr::OriginalName("BYTES")] Bytes = 4,
    /// <summary>
    /// floating point values seperated by commas
    /// </summary>
    [pbr::OriginalName("VECTOR")] Vector = 5,
    [pbr::OriginalName("PICKLE")] Pickle = 6,
    [pbr::OriginalName("XML")] Xml = 7,
    [pbr::OriginalName("JSON")] Json = 8,
  }

  public enum ScoreType {
    [pbr::OriginalName("SERVER")] Server = 0,
    [pbr::OriginalName("L1")] L1 = 1,
    [pbr::OriginalName("L2")] L2 = 2,
    [pbr::OriginalName("NEG_DOT")] NegDot = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  ///This is intended to support flexible encoding schemes in a dictionary like structure:
  ///Example encodings: MALE:0.975, AGE:35.2, RACE:WHITE 
  /// </summary>
  public sealed partial class Attribute : pb::IMessage<Attribute> {
    private static readonly pb::MessageParser<Attribute> _parser = new pb::MessageParser<Attribute>(() => new Attribute());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Attribute> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attribute() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attribute(Attribute other) : this() {
      key_ = other.key_;
      description_ = other.description_;
      buffer_ = other.buffer_;
      fvalue_ = other.fvalue_;
      ivalue_ = other.ivalue_;
      text_ = other.text_;
      pickle_ = other.pickle_;
      json_ = other.json_;
      matrix_ = other.matrix_ != null ? other.matrix_.Clone() : null;
      vector_ = other.vector_ != null ? other.vector_.Clone() : null;
      image_ = other.image_ != null ? other.image_.Clone() : null;
      point_ = other.point_ != null ? other.point_.Clone() : null;
      rect_ = other.rect_ != null ? other.rect_.Clone() : null;
      xml_ = other.xml_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attribute Clone() {
      return new Attribute(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// A text description on the content or type hint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "buffer" field.</summary>
    public const int BufferFieldNumber = 3;
    private pb::ByteString buffer_ = pb::ByteString.Empty;
    /// <summary>
    /// Typically popualate only one of these values
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Buffer {
      get { return buffer_; }
      set {
        buffer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fvalue" field.</summary>
    public const int FvalueFieldNumber = 4;
    private float fvalue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Fvalue {
      get { return fvalue_; }
      set {
        fvalue_ = value;
      }
    }

    /// <summary>Field number for the "ivalue" field.</summary>
    public const int IvalueFieldNumber = 5;
    private int ivalue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ivalue {
      get { return ivalue_; }
      set {
        ivalue_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 6;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pickle" field.</summary>
    public const int PickleFieldNumber = 7;
    private pb::ByteString pickle_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Pickle {
      get { return pickle_; }
      set {
        pickle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "json" field.</summary>
    public const int JsonFieldNumber = 8;
    private pb::ByteString json_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Json {
      get { return json_; }
      set {
        json_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "matrix" field.</summary>
    public const int MatrixFieldNumber = 9;
    private global::Faro.Proto.Matrix matrix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.Matrix Matrix {
      get { return matrix_; }
      set {
        matrix_ = value;
      }
    }

    /// <summary>Field number for the "vector" field.</summary>
    public const int VectorFieldNumber = 10;
    private global::Faro.Proto.Vector vector_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.Vector Vector {
      get { return vector_; }
      set {
        vector_ = value;
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 11;
    private global::Faro.Proto.Image image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.Image Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    /// <summary>Field number for the "point" field.</summary>
    public const int PointFieldNumber = 12;
    private global::Faro.Proto.Point2D point_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.Point2D Point {
      get { return point_; }
      set {
        point_ = value;
      }
    }

    /// <summary>Field number for the "rect" field.</summary>
    public const int RectFieldNumber = 13;
    private global::Faro.Proto.Rect rect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.Rect Rect {
      get { return rect_; }
      set {
        rect_ = value;
      }
    }

    /// <summary>Field number for the "xml" field.</summary>
    public const int XmlFieldNumber = 14;
    private pb::ByteString xml_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Xml {
      get { return xml_; }
      set {
        xml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Attribute);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Attribute other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Description != other.Description) return false;
      if (Buffer != other.Buffer) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Fvalue, other.Fvalue)) return false;
      if (Ivalue != other.Ivalue) return false;
      if (Text != other.Text) return false;
      if (Pickle != other.Pickle) return false;
      if (Json != other.Json) return false;
      if (!object.Equals(Matrix, other.Matrix)) return false;
      if (!object.Equals(Vector, other.Vector)) return false;
      if (!object.Equals(Image, other.Image)) return false;
      if (!object.Equals(Point, other.Point)) return false;
      if (!object.Equals(Rect, other.Rect)) return false;
      if (Xml != other.Xml) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Buffer.Length != 0) hash ^= Buffer.GetHashCode();
      if (Fvalue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Fvalue);
      if (Ivalue != 0) hash ^= Ivalue.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (Pickle.Length != 0) hash ^= Pickle.GetHashCode();
      if (Json.Length != 0) hash ^= Json.GetHashCode();
      if (matrix_ != null) hash ^= Matrix.GetHashCode();
      if (vector_ != null) hash ^= Vector.GetHashCode();
      if (image_ != null) hash ^= Image.GetHashCode();
      if (point_ != null) hash ^= Point.GetHashCode();
      if (rect_ != null) hash ^= Rect.GetHashCode();
      if (Xml.Length != 0) hash ^= Xml.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (Buffer.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Buffer);
      }
      if (Fvalue != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Fvalue);
      }
      if (Ivalue != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Ivalue);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Text);
      }
      if (Pickle.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(Pickle);
      }
      if (Json.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(Json);
      }
      if (matrix_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Matrix);
      }
      if (vector_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Vector);
      }
      if (image_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Image);
      }
      if (point_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Point);
      }
      if (rect_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Rect);
      }
      if (Xml.Length != 0) {
        output.WriteRawTag(114);
        output.WriteBytes(Xml);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Buffer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Buffer);
      }
      if (Fvalue != 0F) {
        size += 1 + 4;
      }
      if (Ivalue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ivalue);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (Pickle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Pickle);
      }
      if (Json.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Json);
      }
      if (matrix_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Matrix);
      }
      if (vector_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Vector);
      }
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (point_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Point);
      }
      if (rect_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rect);
      }
      if (Xml.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Xml);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Attribute other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Buffer.Length != 0) {
        Buffer = other.Buffer;
      }
      if (other.Fvalue != 0F) {
        Fvalue = other.Fvalue;
      }
      if (other.Ivalue != 0) {
        Ivalue = other.Ivalue;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.Pickle.Length != 0) {
        Pickle = other.Pickle;
      }
      if (other.Json.Length != 0) {
        Json = other.Json;
      }
      if (other.matrix_ != null) {
        if (matrix_ == null) {
          Matrix = new global::Faro.Proto.Matrix();
        }
        Matrix.MergeFrom(other.Matrix);
      }
      if (other.vector_ != null) {
        if (vector_ == null) {
          Vector = new global::Faro.Proto.Vector();
        }
        Vector.MergeFrom(other.Vector);
      }
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::Faro.Proto.Image();
        }
        Image.MergeFrom(other.Image);
      }
      if (other.point_ != null) {
        if (point_ == null) {
          Point = new global::Faro.Proto.Point2D();
        }
        Point.MergeFrom(other.Point);
      }
      if (other.rect_ != null) {
        if (rect_ == null) {
          Rect = new global::Faro.Proto.Rect();
        }
        Rect.MergeFrom(other.Rect);
      }
      if (other.Xml.Length != 0) {
        Xml = other.Xml;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            Buffer = input.ReadBytes();
            break;
          }
          case 37: {
            Fvalue = input.ReadFloat();
            break;
          }
          case 40: {
            Ivalue = input.ReadInt32();
            break;
          }
          case 50: {
            Text = input.ReadString();
            break;
          }
          case 58: {
            Pickle = input.ReadBytes();
            break;
          }
          case 66: {
            Json = input.ReadBytes();
            break;
          }
          case 74: {
            if (matrix_ == null) {
              Matrix = new global::Faro.Proto.Matrix();
            }
            input.ReadMessage(Matrix);
            break;
          }
          case 82: {
            if (vector_ == null) {
              Vector = new global::Faro.Proto.Vector();
            }
            input.ReadMessage(Vector);
            break;
          }
          case 90: {
            if (image_ == null) {
              Image = new global::Faro.Proto.Image();
            }
            input.ReadMessage(Image);
            break;
          }
          case 98: {
            if (point_ == null) {
              Point = new global::Faro.Proto.Point2D();
            }
            input.ReadMessage(Point);
            break;
          }
          case 106: {
            if (rect_ == null) {
              Rect = new global::Faro.Proto.Rect();
            }
            input.ReadMessage(Rect);
            break;
          }
          case 114: {
            Xml = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ErrorMessage : pb::IMessage<ErrorMessage> {
    private static readonly pb::MessageParser<ErrorMessage> _parser = new pb::MessageParser<ErrorMessage>(() => new ErrorMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ErrorMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorMessage(ErrorMessage other) : this() {
      errorCode_ = other.errorCode_;
      errorMessage_ = other.errorMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorMessage Clone() {
      return new ErrorMessage(this);
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 3;
    private int errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "error_message" field.</summary>
    public const int ErrorMessage_FieldNumber = 4;
    private string errorMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage_ {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ErrorMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ErrorMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (ErrorMessage_ != other.ErrorMessage_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (ErrorMessage_.Length != 0) hash ^= ErrorMessage_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ErrorCode);
      }
      if (ErrorMessage_.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ErrorMessage_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (ErrorMessage_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ErrorMessage other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.ErrorMessage_.Length != 0) {
        ErrorMessage_ = other.ErrorMessage_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 24: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 34: {
            ErrorMessage_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Detection : pb::IMessage<Detection> {
    private static readonly pb::MessageParser<Detection> _parser = new pb::MessageParser<Detection>(() => new Detection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Detection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Detection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Detection(Detection other) : this() {
      score_ = other.score_;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      detectionId_ = other.detectionId_;
      detectionClass_ = other.detectionClass_;
      attributes_ = other.attributes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Detection Clone() {
      return new Detection(this);
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 1;
    private float score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::Faro.Proto.Rect location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.Rect Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "detection_id" field.</summary>
    public const int DetectionIdFieldNumber = 3;
    private int detectionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DetectionId {
      get { return detectionId_; }
      set {
        detectionId_ = value;
      }
    }

    /// <summary>Field number for the "detection_class" field.</summary>
    public const int DetectionClassFieldNumber = 4;
    private string detectionClass_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DetectionClass {
      get { return detectionClass_; }
      set {
        detectionClass_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Faro.Proto.Attribute> _repeated_attributes_codec
        = pb::FieldCodec.ForMessage(42, global::Faro.Proto.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Faro.Proto.Attribute> attributes_ = new pbc::RepeatedField<global::Faro.Proto.Attribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Faro.Proto.Attribute> Attributes {
      get { return attributes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Detection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Detection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Score, other.Score)) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if (DetectionId != other.DetectionId) return false;
      if (DetectionClass != other.DetectionClass) return false;
      if(!attributes_.Equals(other.attributes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Score != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Score);
      if (location_ != null) hash ^= Location.GetHashCode();
      if (DetectionId != 0) hash ^= DetectionId.GetHashCode();
      if (DetectionClass.Length != 0) hash ^= DetectionClass.GetHashCode();
      hash ^= attributes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Score != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Score);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      if (DetectionId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DetectionId);
      }
      if (DetectionClass.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DetectionClass);
      }
      attributes_.WriteTo(output, _repeated_attributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Score != 0F) {
        size += 1 + 4;
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (DetectionId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DetectionId);
      }
      if (DetectionClass.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DetectionClass);
      }
      size += attributes_.CalculateSize(_repeated_attributes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Detection other) {
      if (other == null) {
        return;
      }
      if (other.Score != 0F) {
        Score = other.Score;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::Faro.Proto.Rect();
        }
        Location.MergeFrom(other.Location);
      }
      if (other.DetectionId != 0) {
        DetectionId = other.DetectionId;
      }
      if (other.DetectionClass.Length != 0) {
        DetectionClass = other.DetectionClass;
      }
      attributes_.Add(other.attributes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Score = input.ReadFloat();
            break;
          }
          case 18: {
            if (location_ == null) {
              Location = new global::Faro.Proto.Rect();
            }
            input.ReadMessage(Location);
            break;
          }
          case 24: {
            DetectionId = input.ReadInt32();
            break;
          }
          case 34: {
            DetectionClass = input.ReadString();
            break;
          }
          case 42: {
            attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Landmark : pb::IMessage<Landmark> {
    private static readonly pb::MessageParser<Landmark> _parser = new pb::MessageParser<Landmark>(() => new Landmark());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Landmark> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Landmark() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Landmark(Landmark other) : this() {
      landmarkId_ = other.landmarkId_;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Landmark Clone() {
      return new Landmark(this);
    }

    /// <summary>Field number for the "landmark_id" field.</summary>
    public const int LandmarkIdFieldNumber = 1;
    private string landmarkId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LandmarkId {
      get { return landmarkId_; }
      set {
        landmarkId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::Faro.Proto.Point2D location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.Point2D Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Landmark);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Landmark other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LandmarkId != other.LandmarkId) return false;
      if (!object.Equals(Location, other.Location)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LandmarkId.Length != 0) hash ^= LandmarkId.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LandmarkId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LandmarkId);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LandmarkId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LandmarkId);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Landmark other) {
      if (other == null) {
        return;
      }
      if (other.LandmarkId.Length != 0) {
        LandmarkId = other.LandmarkId;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::Faro.Proto.Point2D();
        }
        Location.MergeFrom(other.Location);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LandmarkId = input.ReadString();
            break;
          }
          case 18: {
            if (location_ == null) {
              Location = new global::Faro.Proto.Point2D();
            }
            input.ReadMessage(Location);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DetectionOptions : pb::IMessage<DetectionOptions> {
    private static readonly pb::MessageParser<DetectionOptions> _parser = new pb::MessageParser<DetectionOptions>(() => new DetectionOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetectionOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectionOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectionOptions(DetectionOptions other) : this() {
      algorithmId_ = other.algorithmId_;
      best_ = other.best_;
      threshold_ = other.threshold_;
      scaleLevels_ = other.scaleLevels_;
      scanLevels_ = other.scanLevels_;
      scanOverlap_ = other.scanOverlap_;
      minSize_ = other.minSize_;
      saveRequest_ = other.saveRequest_;
      debug_ = other.debug_;
      attributes_ = other.attributes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectionOptions Clone() {
      return new DetectionOptions(this);
    }

    /// <summary>Field number for the "algorithm_id" field.</summary>
    public const int AlgorithmIdFieldNumber = 1;
    private string algorithmId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AlgorithmId {
      get { return algorithmId_; }
      set {
        algorithmId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "best" field.</summary>
    public const int BestFieldNumber = 2;
    private bool best_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Best {
      get { return best_; }
      set {
        best_ = value;
      }
    }

    /// <summary>Field number for the "threshold" field.</summary>
    public const int ThresholdFieldNumber = 3;
    private float threshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Threshold {
      get { return threshold_; }
      set {
        threshold_ = value;
      }
    }

    /// <summary>Field number for the "scale_levels" field.</summary>
    public const int ScaleLevelsFieldNumber = 4;
    private int scaleLevels_;
    /// <summary>
    /// optional - break the image up for larger images
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScaleLevels {
      get { return scaleLevels_; }
      set {
        scaleLevels_ = value;
      }
    }

    /// <summary>Field number for the "scan_levels" field.</summary>
    public const int ScanLevelsFieldNumber = 5;
    private int scanLevels_;
    /// <summary>
    /// number of times to reduce the image by half and then scan using the detector
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScanLevels {
      get { return scanLevels_; }
      set {
        scanLevels_ = value;
      }
    }

    /// <summary>Field number for the "scan_overlap" field.</summary>
    public const int ScanOverlapFieldNumber = 6;
    private float scanOverlap_;
    /// <summary>
    /// amount of overlap to use at each scan level.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ScanOverlap {
      get { return scanOverlap_; }
      set {
        scanOverlap_ = value;
      }
    }

    /// <summary>Field number for the "min_size" field.</summary>
    public const int MinSizeFieldNumber = 7;
    private int minSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinSize {
      get { return minSize_; }
      set {
        minSize_ = value;
      }
    }

    /// <summary>Field number for the "save_request" field.</summary>
    public const int SaveRequestFieldNumber = 9;
    private bool saveRequest_;
    /// <summary>
    /// log the image on the server - Useful for debugging and record keeping
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SaveRequest {
      get { return saveRequest_; }
      set {
        saveRequest_ = value;
      }
    }

    /// <summary>Field number for the "debug" field.</summary>
    public const int DebugFieldNumber = 10;
    private bool debug_;
    /// <summary>
    /// Save or print more info on the server side
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Debug {
      get { return debug_; }
      set {
        debug_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Faro.Proto.Attribute> _repeated_attributes_codec
        = pb::FieldCodec.ForMessage(66, global::Faro.Proto.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Faro.Proto.Attribute> attributes_ = new pbc::RepeatedField<global::Faro.Proto.Attribute>();
    /// <summary>
    /// Used for passing algorithm specific options
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Faro.Proto.Attribute> Attributes {
      get { return attributes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetectionOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetectionOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AlgorithmId != other.AlgorithmId) return false;
      if (Best != other.Best) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Threshold, other.Threshold)) return false;
      if (ScaleLevels != other.ScaleLevels) return false;
      if (ScanLevels != other.ScanLevels) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ScanOverlap, other.ScanOverlap)) return false;
      if (MinSize != other.MinSize) return false;
      if (SaveRequest != other.SaveRequest) return false;
      if (Debug != other.Debug) return false;
      if(!attributes_.Equals(other.attributes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AlgorithmId.Length != 0) hash ^= AlgorithmId.GetHashCode();
      if (Best != false) hash ^= Best.GetHashCode();
      if (Threshold != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Threshold);
      if (ScaleLevels != 0) hash ^= ScaleLevels.GetHashCode();
      if (ScanLevels != 0) hash ^= ScanLevels.GetHashCode();
      if (ScanOverlap != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ScanOverlap);
      if (MinSize != 0) hash ^= MinSize.GetHashCode();
      if (SaveRequest != false) hash ^= SaveRequest.GetHashCode();
      if (Debug != false) hash ^= Debug.GetHashCode();
      hash ^= attributes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AlgorithmId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AlgorithmId);
      }
      if (Best != false) {
        output.WriteRawTag(16);
        output.WriteBool(Best);
      }
      if (Threshold != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Threshold);
      }
      if (ScaleLevels != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ScaleLevels);
      }
      if (ScanLevels != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ScanLevels);
      }
      if (ScanOverlap != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(ScanOverlap);
      }
      if (MinSize != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MinSize);
      }
      attributes_.WriteTo(output, _repeated_attributes_codec);
      if (SaveRequest != false) {
        output.WriteRawTag(72);
        output.WriteBool(SaveRequest);
      }
      if (Debug != false) {
        output.WriteRawTag(80);
        output.WriteBool(Debug);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AlgorithmId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AlgorithmId);
      }
      if (Best != false) {
        size += 1 + 1;
      }
      if (Threshold != 0F) {
        size += 1 + 4;
      }
      if (ScaleLevels != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScaleLevels);
      }
      if (ScanLevels != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScanLevels);
      }
      if (ScanOverlap != 0F) {
        size += 1 + 4;
      }
      if (MinSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinSize);
      }
      if (SaveRequest != false) {
        size += 1 + 1;
      }
      if (Debug != false) {
        size += 1 + 1;
      }
      size += attributes_.CalculateSize(_repeated_attributes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetectionOptions other) {
      if (other == null) {
        return;
      }
      if (other.AlgorithmId.Length != 0) {
        AlgorithmId = other.AlgorithmId;
      }
      if (other.Best != false) {
        Best = other.Best;
      }
      if (other.Threshold != 0F) {
        Threshold = other.Threshold;
      }
      if (other.ScaleLevels != 0) {
        ScaleLevels = other.ScaleLevels;
      }
      if (other.ScanLevels != 0) {
        ScanLevels = other.ScanLevels;
      }
      if (other.ScanOverlap != 0F) {
        ScanOverlap = other.ScanOverlap;
      }
      if (other.MinSize != 0) {
        MinSize = other.MinSize;
      }
      if (other.SaveRequest != false) {
        SaveRequest = other.SaveRequest;
      }
      if (other.Debug != false) {
        Debug = other.Debug;
      }
      attributes_.Add(other.attributes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AlgorithmId = input.ReadString();
            break;
          }
          case 16: {
            Best = input.ReadBool();
            break;
          }
          case 29: {
            Threshold = input.ReadFloat();
            break;
          }
          case 32: {
            ScaleLevels = input.ReadInt32();
            break;
          }
          case 40: {
            ScanLevels = input.ReadInt32();
            break;
          }
          case 53: {
            ScanOverlap = input.ReadFloat();
            break;
          }
          case 56: {
            MinSize = input.ReadInt32();
            break;
          }
          case 66: {
            attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
            break;
          }
          case 72: {
            SaveRequest = input.ReadBool();
            break;
          }
          case 80: {
            Debug = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExtractOptions : pb::IMessage<ExtractOptions> {
    private static readonly pb::MessageParser<ExtractOptions> _parser = new pb::MessageParser<ExtractOptions>(() => new ExtractOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExtractOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtractOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtractOptions(ExtractOptions other) : this() {
      algorithmId_ = other.algorithmId_;
      saveRequest_ = other.saveRequest_;
      debug_ = other.debug_;
      attributes_ = other.attributes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtractOptions Clone() {
      return new ExtractOptions(this);
    }

    /// <summary>Field number for the "algorithm_id" field.</summary>
    public const int AlgorithmIdFieldNumber = 1;
    private string algorithmId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AlgorithmId {
      get { return algorithmId_; }
      set {
        algorithmId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "save_request" field.</summary>
    public const int SaveRequestFieldNumber = 2;
    private bool saveRequest_;
    /// <summary>
    /// log the image on the server - Useful for debugging and record keeping
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SaveRequest {
      get { return saveRequest_; }
      set {
        saveRequest_ = value;
      }
    }

    /// <summary>Field number for the "debug" field.</summary>
    public const int DebugFieldNumber = 3;
    private bool debug_;
    /// <summary>
    /// Save or print more info on the server side
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Debug {
      get { return debug_; }
      set {
        debug_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Faro.Proto.Attribute> _repeated_attributes_codec
        = pb::FieldCodec.ForMessage(66, global::Faro.Proto.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Faro.Proto.Attribute> attributes_ = new pbc::RepeatedField<global::Faro.Proto.Attribute>();
    /// <summary>
    /// Used for passing algorithm specific options
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Faro.Proto.Attribute> Attributes {
      get { return attributes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExtractOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExtractOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AlgorithmId != other.AlgorithmId) return false;
      if (SaveRequest != other.SaveRequest) return false;
      if (Debug != other.Debug) return false;
      if(!attributes_.Equals(other.attributes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AlgorithmId.Length != 0) hash ^= AlgorithmId.GetHashCode();
      if (SaveRequest != false) hash ^= SaveRequest.GetHashCode();
      if (Debug != false) hash ^= Debug.GetHashCode();
      hash ^= attributes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AlgorithmId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AlgorithmId);
      }
      if (SaveRequest != false) {
        output.WriteRawTag(16);
        output.WriteBool(SaveRequest);
      }
      if (Debug != false) {
        output.WriteRawTag(24);
        output.WriteBool(Debug);
      }
      attributes_.WriteTo(output, _repeated_attributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AlgorithmId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AlgorithmId);
      }
      if (SaveRequest != false) {
        size += 1 + 1;
      }
      if (Debug != false) {
        size += 1 + 1;
      }
      size += attributes_.CalculateSize(_repeated_attributes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExtractOptions other) {
      if (other == null) {
        return;
      }
      if (other.AlgorithmId.Length != 0) {
        AlgorithmId = other.AlgorithmId;
      }
      if (other.SaveRequest != false) {
        SaveRequest = other.SaveRequest;
      }
      if (other.Debug != false) {
        Debug = other.Debug;
      }
      attributes_.Add(other.attributes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AlgorithmId = input.ReadString();
            break;
          }
          case 16: {
            SaveRequest = input.ReadBool();
            break;
          }
          case 24: {
            Debug = input.ReadBool();
            break;
          }
          case 66: {
            attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EnrollOptions : pb::IMessage<EnrollOptions> {
    private static readonly pb::MessageParser<EnrollOptions> _parser = new pb::MessageParser<EnrollOptions>(() => new EnrollOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnrollOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnrollOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnrollOptions(EnrollOptions other) : this() {
      saveRequest_ = other.saveRequest_;
      debug_ = other.debug_;
      attributes_ = other.attributes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnrollOptions Clone() {
      return new EnrollOptions(this);
    }

    /// <summary>Field number for the "save_request" field.</summary>
    public const int SaveRequestFieldNumber = 2;
    private bool saveRequest_;
    /// <summary>
    /// log the image on the server - Useful for debugging and record keeping
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SaveRequest {
      get { return saveRequest_; }
      set {
        saveRequest_ = value;
      }
    }

    /// <summary>Field number for the "debug" field.</summary>
    public const int DebugFieldNumber = 3;
    private bool debug_;
    /// <summary>
    /// Save or print more info on the server side
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Debug {
      get { return debug_; }
      set {
        debug_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Faro.Proto.Attribute> _repeated_attributes_codec
        = pb::FieldCodec.ForMessage(66, global::Faro.Proto.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Faro.Proto.Attribute> attributes_ = new pbc::RepeatedField<global::Faro.Proto.Attribute>();
    /// <summary>
    /// Used for passing algorithm specific options
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Faro.Proto.Attribute> Attributes {
      get { return attributes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnrollOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnrollOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SaveRequest != other.SaveRequest) return false;
      if (Debug != other.Debug) return false;
      if(!attributes_.Equals(other.attributes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SaveRequest != false) hash ^= SaveRequest.GetHashCode();
      if (Debug != false) hash ^= Debug.GetHashCode();
      hash ^= attributes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SaveRequest != false) {
        output.WriteRawTag(16);
        output.WriteBool(SaveRequest);
      }
      if (Debug != false) {
        output.WriteRawTag(24);
        output.WriteBool(Debug);
      }
      attributes_.WriteTo(output, _repeated_attributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SaveRequest != false) {
        size += 1 + 1;
      }
      if (Debug != false) {
        size += 1 + 1;
      }
      size += attributes_.CalculateSize(_repeated_attributes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnrollOptions other) {
      if (other == null) {
        return;
      }
      if (other.SaveRequest != false) {
        SaveRequest = other.SaveRequest;
      }
      if (other.Debug != false) {
        Debug = other.Debug;
      }
      attributes_.Add(other.attributes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            SaveRequest = input.ReadBool();
            break;
          }
          case 24: {
            Debug = input.ReadBool();
            break;
          }
          case 66: {
            attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DetectionList : pb::IMessage<DetectionList> {
    private static readonly pb::MessageParser<DetectionList> _parser = new pb::MessageParser<DetectionList>(() => new DetectionList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetectionList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectionList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectionList(DetectionList other) : this() {
      detections_ = other.detections_.Clone();
      detectionTime_ = other.detectionTime_;
      imageWidth_ = other.imageWidth_;
      imageHeight_ = other.imageHeight_;
      detectionCount_ = other.detectionCount_;
      options_ = other.options_ != null ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectionList Clone() {
      return new DetectionList(this);
    }

    /// <summary>Field number for the "detections" field.</summary>
    public const int DetectionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Faro.Proto.Detection> _repeated_detections_codec
        = pb::FieldCodec.ForMessage(10, global::Faro.Proto.Detection.Parser);
    private readonly pbc::RepeatedField<global::Faro.Proto.Detection> detections_ = new pbc::RepeatedField<global::Faro.Proto.Detection>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Faro.Proto.Detection> Detections {
      get { return detections_; }
    }

    /// <summary>Field number for the "detection_time" field.</summary>
    public const int DetectionTimeFieldNumber = 2;
    private float detectionTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float DetectionTime {
      get { return detectionTime_; }
      set {
        detectionTime_ = value;
      }
    }

    /// <summary>Field number for the "image_width" field.</summary>
    public const int ImageWidthFieldNumber = 3;
    private int imageWidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ImageWidth {
      get { return imageWidth_; }
      set {
        imageWidth_ = value;
      }
    }

    /// <summary>Field number for the "image_height" field.</summary>
    public const int ImageHeightFieldNumber = 4;
    private int imageHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ImageHeight {
      get { return imageHeight_; }
      set {
        imageHeight_ = value;
      }
    }

    /// <summary>Field number for the "detection_count" field.</summary>
    public const int DetectionCountFieldNumber = 5;
    private int detectionCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DetectionCount {
      get { return detectionCount_; }
      set {
        detectionCount_ = value;
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 6;
    private global::Faro.Proto.DetectionOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.DetectionOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetectionList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetectionList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!detections_.Equals(other.detections_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DetectionTime, other.DetectionTime)) return false;
      if (ImageWidth != other.ImageWidth) return false;
      if (ImageHeight != other.ImageHeight) return false;
      if (DetectionCount != other.DetectionCount) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= detections_.GetHashCode();
      if (DetectionTime != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DetectionTime);
      if (ImageWidth != 0) hash ^= ImageWidth.GetHashCode();
      if (ImageHeight != 0) hash ^= ImageHeight.GetHashCode();
      if (DetectionCount != 0) hash ^= DetectionCount.GetHashCode();
      if (options_ != null) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      detections_.WriteTo(output, _repeated_detections_codec);
      if (DetectionTime != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(DetectionTime);
      }
      if (ImageWidth != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ImageWidth);
      }
      if (ImageHeight != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ImageHeight);
      }
      if (DetectionCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DetectionCount);
      }
      if (options_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += detections_.CalculateSize(_repeated_detections_codec);
      if (DetectionTime != 0F) {
        size += 1 + 4;
      }
      if (ImageWidth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ImageWidth);
      }
      if (ImageHeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ImageHeight);
      }
      if (DetectionCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DetectionCount);
      }
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetectionList other) {
      if (other == null) {
        return;
      }
      detections_.Add(other.detections_);
      if (other.DetectionTime != 0F) {
        DetectionTime = other.DetectionTime;
      }
      if (other.ImageWidth != 0) {
        ImageWidth = other.ImageWidth;
      }
      if (other.ImageHeight != 0) {
        ImageHeight = other.ImageHeight;
      }
      if (other.DetectionCount != 0) {
        DetectionCount = other.DetectionCount;
      }
      if (other.options_ != null) {
        if (options_ == null) {
          Options = new global::Faro.Proto.DetectionOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            detections_.AddEntriesFrom(input, _repeated_detections_codec);
            break;
          }
          case 21: {
            DetectionTime = input.ReadFloat();
            break;
          }
          case 24: {
            ImageWidth = input.ReadInt32();
            break;
          }
          case 32: {
            ImageHeight = input.ReadInt32();
            break;
          }
          case 40: {
            DetectionCount = input.ReadInt32();
            break;
          }
          case 50: {
            if (options_ == null) {
              Options = new global::Faro.Proto.DetectionOptions();
            }
            input.ReadMessage(Options);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MatchList : pb::IMessage<MatchList> {
    private static readonly pb::MessageParser<MatchList> _parser = new pb::MessageParser<MatchList>(() => new MatchList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchList(MatchList other) : this() {
      matchList_ = other.matchList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchList Clone() {
      return new MatchList(this);
    }

    /// <summary>Field number for the "match_list" field.</summary>
    public const int MatchList_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Faro.Proto.MatchInfo> _repeated_matchList_codec
        = pb::FieldCodec.ForMessage(10, global::Faro.Proto.MatchInfo.Parser);
    private readonly pbc::RepeatedField<global::Faro.Proto.MatchInfo> matchList_ = new pbc::RepeatedField<global::Faro.Proto.MatchInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Faro.Proto.MatchInfo> MatchList_ {
      get { return matchList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!matchList_.Equals(other.matchList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= matchList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      matchList_.WriteTo(output, _repeated_matchList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += matchList_.CalculateSize(_repeated_matchList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchList other) {
      if (other == null) {
        return;
      }
      matchList_.Add(other.matchList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            matchList_.AddEntriesFrom(input, _repeated_matchList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MatchInfo : pb::IMessage<MatchInfo> {
    private static readonly pb::MessageParser<MatchInfo> _parser = new pb::MessageParser<MatchInfo>(() => new MatchInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchInfo(MatchInfo other) : this() {
      score_ = other.score_;
      imageId_ = other.imageId_;
      detectionId_ = other.detectionId_;
      subjectId_ = other.subjectId_;
      subjectName_ = other.subjectName_;
      face_ = other.face_ != null ? other.face_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchInfo Clone() {
      return new MatchInfo(this);
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 1;
    private float score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "image_id" field.</summary>
    public const int ImageIdFieldNumber = 2;
    private string imageId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageId {
      get { return imageId_; }
      set {
        imageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "detection_id" field.</summary>
    public const int DetectionIdFieldNumber = 3;
    private string detectionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DetectionId {
      get { return detectionId_; }
      set {
        detectionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subject_id" field.</summary>
    public const int SubjectIdFieldNumber = 4;
    private string subjectId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubjectId {
      get { return subjectId_; }
      set {
        subjectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subject_name" field.</summary>
    public const int SubjectNameFieldNumber = 5;
    private string subjectName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubjectName {
      get { return subjectName_; }
      set {
        subjectName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "face" field.</summary>
    public const int FaceFieldNumber = 6;
    private global::Faro.Proto.Image face_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.Image Face {
      get { return face_; }
      set {
        face_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Score, other.Score)) return false;
      if (ImageId != other.ImageId) return false;
      if (DetectionId != other.DetectionId) return false;
      if (SubjectId != other.SubjectId) return false;
      if (SubjectName != other.SubjectName) return false;
      if (!object.Equals(Face, other.Face)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Score != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Score);
      if (ImageId.Length != 0) hash ^= ImageId.GetHashCode();
      if (DetectionId.Length != 0) hash ^= DetectionId.GetHashCode();
      if (SubjectId.Length != 0) hash ^= SubjectId.GetHashCode();
      if (SubjectName.Length != 0) hash ^= SubjectName.GetHashCode();
      if (face_ != null) hash ^= Face.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Score != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Score);
      }
      if (ImageId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ImageId);
      }
      if (DetectionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DetectionId);
      }
      if (SubjectId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SubjectId);
      }
      if (SubjectName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SubjectName);
      }
      if (face_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Face);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Score != 0F) {
        size += 1 + 4;
      }
      if (ImageId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageId);
      }
      if (DetectionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DetectionId);
      }
      if (SubjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubjectId);
      }
      if (SubjectName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubjectName);
      }
      if (face_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Face);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchInfo other) {
      if (other == null) {
        return;
      }
      if (other.Score != 0F) {
        Score = other.Score;
      }
      if (other.ImageId.Length != 0) {
        ImageId = other.ImageId;
      }
      if (other.DetectionId.Length != 0) {
        DetectionId = other.DetectionId;
      }
      if (other.SubjectId.Length != 0) {
        SubjectId = other.SubjectId;
      }
      if (other.SubjectName.Length != 0) {
        SubjectName = other.SubjectName;
      }
      if (other.face_ != null) {
        if (face_ == null) {
          Face = new global::Faro.Proto.Image();
        }
        Face.MergeFrom(other.Face);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Score = input.ReadFloat();
            break;
          }
          case 18: {
            ImageId = input.ReadString();
            break;
          }
          case 26: {
            DetectionId = input.ReadString();
            break;
          }
          case 34: {
            SubjectId = input.ReadString();
            break;
          }
          case 42: {
            SubjectName = input.ReadString();
            break;
          }
          case 50: {
            if (face_ == null) {
              Face = new global::Faro.Proto.Image();
            }
            input.ReadMessage(Face);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TemplateInput : pb::IMessage<TemplateInput> {
    private static readonly pb::MessageParser<TemplateInput> _parser = new pb::MessageParser<TemplateInput>(() => new TemplateInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TemplateInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateInput(TemplateInput other) : this() {
      im_ = other.im_ != null ? other.im_.Clone() : null;
      detections_ = other.detections_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateInput Clone() {
      return new TemplateInput(this);
    }

    /// <summary>Field number for the "im" field.</summary>
    public const int ImFieldNumber = 1;
    private global::Faro.Proto.Image im_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.Image Im {
      get { return im_; }
      set {
        im_ = value;
      }
    }

    /// <summary>Field number for the "detections" field.</summary>
    public const int DetectionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Faro.Proto.Rect> _repeated_detections_codec
        = pb::FieldCodec.ForMessage(18, global::Faro.Proto.Rect.Parser);
    private readonly pbc::RepeatedField<global::Faro.Proto.Rect> detections_ = new pbc::RepeatedField<global::Faro.Proto.Rect>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Faro.Proto.Rect> Detections {
      get { return detections_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TemplateInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TemplateInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Im, other.Im)) return false;
      if(!detections_.Equals(other.detections_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (im_ != null) hash ^= Im.GetHashCode();
      hash ^= detections_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (im_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Im);
      }
      detections_.WriteTo(output, _repeated_detections_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (im_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Im);
      }
      size += detections_.CalculateSize(_repeated_detections_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TemplateInput other) {
      if (other == null) {
        return;
      }
      if (other.im_ != null) {
        if (im_ == null) {
          Im = new global::Faro.Proto.Image();
        }
        Im.MergeFrom(other.Im);
      }
      detections_.Add(other.detections_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (im_ == null) {
              Im = new global::Faro.Proto.Image();
            }
            input.ReadMessage(Im);
            break;
          }
          case 18: {
            detections_.AddEntriesFrom(input, _repeated_detections_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FaceTemplate : pb::IMessage<FaceTemplate> {
    private static readonly pb::MessageParser<FaceTemplate> _parser = new pb::MessageParser<FaceTemplate>(() => new FaceTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FaceTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceTemplate(FaceTemplate other) : this() {
      data_ = other.data_ != null ? other.data_.Clone() : null;
      buffer_ = other.buffer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceTemplate Clone() {
      return new FaceTemplate(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private global::Faro.Proto.Vector data_;
    /// <summary>
    /// Typically just populate one of these fields.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.Vector Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    /// <summary>Field number for the "buffer" field.</summary>
    public const int BufferFieldNumber = 2;
    private pb::ByteString buffer_ = pb::ByteString.Empty;
    /// <summary>
    /// General storage.  Can be used for raw data templates from commercial systems.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Buffer {
      get { return buffer_; }
      set {
        buffer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FaceTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FaceTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Data, other.Data)) return false;
      if (Buffer != other.Buffer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (data_ != null) hash ^= Data.GetHashCode();
      if (Buffer.Length != 0) hash ^= Buffer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (data_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Data);
      }
      if (Buffer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Buffer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (Buffer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Buffer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FaceTemplate other) {
      if (other == null) {
        return;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::Faro.Proto.Vector();
        }
        Data.MergeFrom(other.Data);
      }
      if (other.Buffer.Length != 0) {
        Buffer = other.Buffer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (data_ == null) {
              Data = new global::Faro.Proto.Vector();
            }
            input.ReadMessage(Data);
            break;
          }
          case 18: {
            Buffer = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TemplateList : pb::IMessage<TemplateList> {
    private static readonly pb::MessageParser<TemplateList> _parser = new pb::MessageParser<TemplateList>(() => new TemplateList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TemplateList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateList(TemplateList other) : this() {
      templates_ = other.templates_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateList Clone() {
      return new TemplateList(this);
    }

    /// <summary>Field number for the "templates" field.</summary>
    public const int TemplatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Faro.Proto.FaceTemplate> _repeated_templates_codec
        = pb::FieldCodec.ForMessage(10, global::Faro.Proto.FaceTemplate.Parser);
    private readonly pbc::RepeatedField<global::Faro.Proto.FaceTemplate> templates_ = new pbc::RepeatedField<global::Faro.Proto.FaceTemplate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Faro.Proto.FaceTemplate> Templates {
      get { return templates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TemplateList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TemplateList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!templates_.Equals(other.templates_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= templates_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      templates_.WriteTo(output, _repeated_templates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += templates_.CalculateSize(_repeated_templates_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TemplateList other) {
      if (other == null) {
        return;
      }
      templates_.Add(other.templates_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            templates_.AddEntriesFrom(input, _repeated_templates_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccessRecord : pb::IMessage<AccessRecord> {
    private static readonly pb::MessageParser<AccessRecord> _parser = new pb::MessageParser<AccessRecord>(() => new AccessRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccessRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccessRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccessRecord(AccessRecord other) : this() {
      datetime_ = other.datetime_;
      notes_ = other.notes_;
      credential_ = other.credential_;
      metadata_ = other.metadata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccessRecord Clone() {
      return new AccessRecord(this);
    }

    /// <summary>Field number for the "datetime" field.</summary>
    public const int DatetimeFieldNumber = 1;
    private float datetime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Datetime {
      get { return datetime_; }
      set {
        datetime_ = value;
      }
    }

    /// <summary>Field number for the "notes" field.</summary>
    public const int NotesFieldNumber = 2;
    private string notes_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Notes {
      get { return notes_; }
      set {
        notes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "credential" field.</summary>
    public const int CredentialFieldNumber = 3;
    private string credential_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Credential {
      get { return credential_; }
      set {
        credential_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Faro.Proto.Attribute> _repeated_metadata_codec
        = pb::FieldCodec.ForMessage(34, global::Faro.Proto.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Faro.Proto.Attribute> metadata_ = new pbc::RepeatedField<global::Faro.Proto.Attribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Faro.Proto.Attribute> Metadata {
      get { return metadata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccessRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccessRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Datetime, other.Datetime)) return false;
      if (Notes != other.Notes) return false;
      if (Credential != other.Credential) return false;
      if(!metadata_.Equals(other.metadata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Datetime != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Datetime);
      if (Notes.Length != 0) hash ^= Notes.GetHashCode();
      if (Credential.Length != 0) hash ^= Credential.GetHashCode();
      hash ^= metadata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Datetime != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Datetime);
      }
      if (Notes.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Notes);
      }
      if (Credential.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Credential);
      }
      metadata_.WriteTo(output, _repeated_metadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Datetime != 0F) {
        size += 1 + 4;
      }
      if (Notes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Notes);
      }
      if (Credential.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Credential);
      }
      size += metadata_.CalculateSize(_repeated_metadata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccessRecord other) {
      if (other == null) {
        return;
      }
      if (other.Datetime != 0F) {
        Datetime = other.Datetime;
      }
      if (other.Notes.Length != 0) {
        Notes = other.Notes;
      }
      if (other.Credential.Length != 0) {
        Credential = other.Credential;
      }
      metadata_.Add(other.metadata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Datetime = input.ReadFloat();
            break;
          }
          case 18: {
            Notes = input.ReadString();
            break;
          }
          case 26: {
            Credential = input.ReadString();
            break;
          }
          case 34: {
            metadata_.AddEntriesFrom(input, _repeated_metadata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FaceRecord : pb::IMessage<FaceRecord> {
    private static readonly pb::MessageParser<FaceRecord> _parser = new pb::MessageParser<FaceRecord>(() => new FaceRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FaceRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceRecord(FaceRecord other) : this() {
      subjectId_ = other.subjectId_;
      name_ = other.name_;
      source_ = other.source_;
      frame_ = other.frame_;
      notes_ = other.notes_;
      galleryKey_ = other.galleryKey_;
      collectionDate_ = other.collectionDate_;
      enrollmentDate_ = other.enrollmentDate_;
      metadata_ = other.metadata_.Clone();
      accessRecords_ = other.accessRecords_.Clone();
      view_ = other.view_ != null ? other.view_.Clone() : null;
      aligned_ = other.aligned_ != null ? other.aligned_.Clone() : null;
      detection_ = other.detection_ != null ? other.detection_.Clone() : null;
      landmarks_ = other.landmarks_.Clone();
      attributes_ = other.attributes_.Clone();
      internalData_ = other.internalData_.Clone();
      template_ = other.template_ != null ? other.template_.Clone() : null;
      score_ = other.score_;
      searchResults_ = other.searchResults_ != null ? other.searchResults_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceRecord Clone() {
      return new FaceRecord(this);
    }

    /// <summary>Field number for the "subject_id" field.</summary>
    public const int SubjectIdFieldNumber = 1;
    private string subjectId_ = "";
    /// <summary>
    /// Note: The face id is a combination of subject_id:source:detection.detection_id is the face id and this should be unique.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubjectId {
      get { return subjectId_; }
      set {
        subjectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 4;
    private string source_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return source_; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "frame" field.</summary>
    public const int FrameFieldNumber = 14;
    private long frame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Frame {
      get { return frame_; }
      set {
        frame_ = value;
      }
    }

    /// <summary>Field number for the "notes" field.</summary>
    public const int NotesFieldNumber = 6;
    private string notes_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Notes {
      get { return notes_; }
      set {
        notes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gallery_key" field.</summary>
    public const int GalleryKeyFieldNumber = 15;
    private string galleryKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GalleryKey {
      get { return galleryKey_; }
      set {
        galleryKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collection_date" field.</summary>
    public const int CollectionDateFieldNumber = 16;
    private float collectionDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CollectionDate {
      get { return collectionDate_; }
      set {
        collectionDate_ = value;
      }
    }

    /// <summary>Field number for the "enrollment_date" field.</summary>
    public const int EnrollmentDateFieldNumber = 17;
    private float enrollmentDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float EnrollmentDate {
      get { return enrollmentDate_; }
      set {
        enrollmentDate_ = value;
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 18;
    private static readonly pb::FieldCodec<global::Faro.Proto.Attribute> _repeated_metadata_codec
        = pb::FieldCodec.ForMessage(146, global::Faro.Proto.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Faro.Proto.Attribute> metadata_ = new pbc::RepeatedField<global::Faro.Proto.Attribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Faro.Proto.Attribute> Metadata {
      get { return metadata_; }
    }

    /// <summary>Field number for the "access_records" field.</summary>
    public const int AccessRecordsFieldNumber = 19;
    private static readonly pb::FieldCodec<global::Faro.Proto.AccessRecord> _repeated_accessRecords_codec
        = pb::FieldCodec.ForMessage(154, global::Faro.Proto.AccessRecord.Parser);
    private readonly pbc::RepeatedField<global::Faro.Proto.AccessRecord> accessRecords_ = new pbc::RepeatedField<global::Faro.Proto.AccessRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Faro.Proto.AccessRecord> AccessRecords {
      get { return accessRecords_; }
    }

    /// <summary>Field number for the "view" field.</summary>
    public const int ViewFieldNumber = 7;
    private global::Faro.Proto.Image view_;
    /// <summary>
    /// A cropped and scaled image to be viewed by humans, similar to a passport photo.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.Image View {
      get { return view_; }
      set {
        view_ = value;
      }
    }

    /// <summary>Field number for the "aligned" field.</summary>
    public const int AlignedFieldNumber = 9;
    private global::Faro.Proto.Image aligned_;
    /// <summary>
    /// An aligned image used for template extraction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.Image Aligned {
      get { return aligned_; }
      set {
        aligned_ = value;
      }
    }

    /// <summary>Field number for the "detection" field.</summary>
    public const int DetectionFieldNumber = 2;
    private global::Faro.Proto.Detection detection_;
    /// <summary>
    /// The detection rectangle etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.Detection Detection {
      get { return detection_; }
      set {
        detection_ = value;
      }
    }

    /// <summary>Field number for the "landmarks" field.</summary>
    public const int LandmarksFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Faro.Proto.Landmark> _repeated_landmarks_codec
        = pb::FieldCodec.ForMessage(66, global::Faro.Proto.Landmark.Parser);
    private readonly pbc::RepeatedField<global::Faro.Proto.Landmark> landmarks_ = new pbc::RepeatedField<global::Faro.Proto.Landmark>();
    /// <summary>
    /// eyes, nose, mouth, etc
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Faro.Proto.Landmark> Landmarks {
      get { return landmarks_; }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Faro.Proto.Attribute> _repeated_attributes_codec
        = pb::FieldCodec.ForMessage(82, global::Faro.Proto.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Faro.Proto.Attribute> attributes_ = new pbc::RepeatedField<global::Faro.Proto.Attribute>();
    /// <summary>
    /// smiling, glasses, gender, race, ...
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Faro.Proto.Attribute> Attributes {
      get { return attributes_; }
    }

    /// <summary>Field number for the "internal_data" field.</summary>
    public const int InternalDataFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Faro.Proto.Attribute> _repeated_internalData_codec
        = pb::FieldCodec.ForMessage(90, global::Faro.Proto.Attribute.Parser);
    private readonly pbc::RepeatedField<global::Faro.Proto.Attribute> internalData_ = new pbc::RepeatedField<global::Faro.Proto.Attribute>();
    /// <summary>
    /// a dictionary used to store algorithm specific data about the face.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Faro.Proto.Attribute> InternalData {
      get { return internalData_; }
    }

    /// <summary>Field number for the "template" field.</summary>
    public const int TemplateFieldNumber = 3;
    private global::Faro.Proto.FaceTemplate template_;
    /// <summary>
    /// A small encoding used for fast face matching.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.FaceTemplate Template {
      get { return template_; }
      set {
        template_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 12;
    private float score_;
    /// <summary>
    /// A score indicating the similarity in a search results list
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "search_results" field.</summary>
    public const int SearchResultsFieldNumber = 13;
    private global::Faro.Proto.FaceRecordList searchResults_;
    /// <summary>
    /// A list of matching faces
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.FaceRecordList SearchResults {
      get { return searchResults_; }
      set {
        searchResults_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FaceRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FaceRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubjectId != other.SubjectId) return false;
      if (Name != other.Name) return false;
      if (Source != other.Source) return false;
      if (Frame != other.Frame) return false;
      if (Notes != other.Notes) return false;
      if (GalleryKey != other.GalleryKey) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CollectionDate, other.CollectionDate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EnrollmentDate, other.EnrollmentDate)) return false;
      if(!metadata_.Equals(other.metadata_)) return false;
      if(!accessRecords_.Equals(other.accessRecords_)) return false;
      if (!object.Equals(View, other.View)) return false;
      if (!object.Equals(Aligned, other.Aligned)) return false;
      if (!object.Equals(Detection, other.Detection)) return false;
      if(!landmarks_.Equals(other.landmarks_)) return false;
      if(!attributes_.Equals(other.attributes_)) return false;
      if(!internalData_.Equals(other.internalData_)) return false;
      if (!object.Equals(Template, other.Template)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Score, other.Score)) return false;
      if (!object.Equals(SearchResults, other.SearchResults)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubjectId.Length != 0) hash ^= SubjectId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Source.Length != 0) hash ^= Source.GetHashCode();
      if (Frame != 0L) hash ^= Frame.GetHashCode();
      if (Notes.Length != 0) hash ^= Notes.GetHashCode();
      if (GalleryKey.Length != 0) hash ^= GalleryKey.GetHashCode();
      if (CollectionDate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CollectionDate);
      if (EnrollmentDate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EnrollmentDate);
      hash ^= metadata_.GetHashCode();
      hash ^= accessRecords_.GetHashCode();
      if (view_ != null) hash ^= View.GetHashCode();
      if (aligned_ != null) hash ^= Aligned.GetHashCode();
      if (detection_ != null) hash ^= Detection.GetHashCode();
      hash ^= landmarks_.GetHashCode();
      hash ^= attributes_.GetHashCode();
      hash ^= internalData_.GetHashCode();
      if (template_ != null) hash ^= Template.GetHashCode();
      if (Score != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Score);
      if (searchResults_ != null) hash ^= SearchResults.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SubjectId);
      }
      if (detection_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Detection);
      }
      if (template_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Template);
      }
      if (Source.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Source);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (Notes.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Notes);
      }
      if (view_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(View);
      }
      landmarks_.WriteTo(output, _repeated_landmarks_codec);
      if (aligned_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Aligned);
      }
      attributes_.WriteTo(output, _repeated_attributes_codec);
      internalData_.WriteTo(output, _repeated_internalData_codec);
      if (Score != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(Score);
      }
      if (searchResults_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(SearchResults);
      }
      if (Frame != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(Frame);
      }
      if (GalleryKey.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(GalleryKey);
      }
      if (CollectionDate != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(CollectionDate);
      }
      if (EnrollmentDate != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(EnrollmentDate);
      }
      metadata_.WriteTo(output, _repeated_metadata_codec);
      accessRecords_.WriteTo(output, _repeated_accessRecords_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubjectId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Source.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (Frame != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Frame);
      }
      if (Notes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Notes);
      }
      if (GalleryKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GalleryKey);
      }
      if (CollectionDate != 0F) {
        size += 2 + 4;
      }
      if (EnrollmentDate != 0F) {
        size += 2 + 4;
      }
      size += metadata_.CalculateSize(_repeated_metadata_codec);
      size += accessRecords_.CalculateSize(_repeated_accessRecords_codec);
      if (view_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(View);
      }
      if (aligned_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Aligned);
      }
      if (detection_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Detection);
      }
      size += landmarks_.CalculateSize(_repeated_landmarks_codec);
      size += attributes_.CalculateSize(_repeated_attributes_codec);
      size += internalData_.CalculateSize(_repeated_internalData_codec);
      if (template_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Template);
      }
      if (Score != 0F) {
        size += 1 + 4;
      }
      if (searchResults_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SearchResults);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FaceRecord other) {
      if (other == null) {
        return;
      }
      if (other.SubjectId.Length != 0) {
        SubjectId = other.SubjectId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Source.Length != 0) {
        Source = other.Source;
      }
      if (other.Frame != 0L) {
        Frame = other.Frame;
      }
      if (other.Notes.Length != 0) {
        Notes = other.Notes;
      }
      if (other.GalleryKey.Length != 0) {
        GalleryKey = other.GalleryKey;
      }
      if (other.CollectionDate != 0F) {
        CollectionDate = other.CollectionDate;
      }
      if (other.EnrollmentDate != 0F) {
        EnrollmentDate = other.EnrollmentDate;
      }
      metadata_.Add(other.metadata_);
      accessRecords_.Add(other.accessRecords_);
      if (other.view_ != null) {
        if (view_ == null) {
          View = new global::Faro.Proto.Image();
        }
        View.MergeFrom(other.View);
      }
      if (other.aligned_ != null) {
        if (aligned_ == null) {
          Aligned = new global::Faro.Proto.Image();
        }
        Aligned.MergeFrom(other.Aligned);
      }
      if (other.detection_ != null) {
        if (detection_ == null) {
          Detection = new global::Faro.Proto.Detection();
        }
        Detection.MergeFrom(other.Detection);
      }
      landmarks_.Add(other.landmarks_);
      attributes_.Add(other.attributes_);
      internalData_.Add(other.internalData_);
      if (other.template_ != null) {
        if (template_ == null) {
          Template = new global::Faro.Proto.FaceTemplate();
        }
        Template.MergeFrom(other.Template);
      }
      if (other.Score != 0F) {
        Score = other.Score;
      }
      if (other.searchResults_ != null) {
        if (searchResults_ == null) {
          SearchResults = new global::Faro.Proto.FaceRecordList();
        }
        SearchResults.MergeFrom(other.SearchResults);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SubjectId = input.ReadString();
            break;
          }
          case 18: {
            if (detection_ == null) {
              Detection = new global::Faro.Proto.Detection();
            }
            input.ReadMessage(Detection);
            break;
          }
          case 26: {
            if (template_ == null) {
              Template = new global::Faro.Proto.FaceTemplate();
            }
            input.ReadMessage(Template);
            break;
          }
          case 34: {
            Source = input.ReadString();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 50: {
            Notes = input.ReadString();
            break;
          }
          case 58: {
            if (view_ == null) {
              View = new global::Faro.Proto.Image();
            }
            input.ReadMessage(View);
            break;
          }
          case 66: {
            landmarks_.AddEntriesFrom(input, _repeated_landmarks_codec);
            break;
          }
          case 74: {
            if (aligned_ == null) {
              Aligned = new global::Faro.Proto.Image();
            }
            input.ReadMessage(Aligned);
            break;
          }
          case 82: {
            attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
            break;
          }
          case 90: {
            internalData_.AddEntriesFrom(input, _repeated_internalData_codec);
            break;
          }
          case 101: {
            Score = input.ReadFloat();
            break;
          }
          case 106: {
            if (searchResults_ == null) {
              SearchResults = new global::Faro.Proto.FaceRecordList();
            }
            input.ReadMessage(SearchResults);
            break;
          }
          case 112: {
            Frame = input.ReadInt64();
            break;
          }
          case 122: {
            GalleryKey = input.ReadString();
            break;
          }
          case 133: {
            CollectionDate = input.ReadFloat();
            break;
          }
          case 141: {
            EnrollmentDate = input.ReadFloat();
            break;
          }
          case 146: {
            metadata_.AddEntriesFrom(input, _repeated_metadata_codec);
            break;
          }
          case 154: {
            accessRecords_.AddEntriesFrom(input, _repeated_accessRecords_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FaceRecordList : pb::IMessage<FaceRecordList> {
    private static readonly pb::MessageParser<FaceRecordList> _parser = new pb::MessageParser<FaceRecordList>(() => new FaceRecordList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FaceRecordList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceRecordList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceRecordList(FaceRecordList other) : this() {
      faceRecords_ = other.faceRecords_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceRecordList Clone() {
      return new FaceRecordList(this);
    }

    /// <summary>Field number for the "face_records" field.</summary>
    public const int FaceRecordsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Faro.Proto.FaceRecord> _repeated_faceRecords_codec
        = pb::FieldCodec.ForMessage(10, global::Faro.Proto.FaceRecord.Parser);
    private readonly pbc::RepeatedField<global::Faro.Proto.FaceRecord> faceRecords_ = new pbc::RepeatedField<global::Faro.Proto.FaceRecord>();
    /// <summary>
    ///repeated float scores = 2; // Scores returned by gallery searches
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Faro.Proto.FaceRecord> FaceRecords {
      get { return faceRecords_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FaceRecordList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FaceRecordList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!faceRecords_.Equals(other.faceRecords_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= faceRecords_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      faceRecords_.WriteTo(output, _repeated_faceRecords_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += faceRecords_.CalculateSize(_repeated_faceRecords_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FaceRecordList other) {
      if (other == null) {
        return;
      }
      faceRecords_.Add(other.faceRecords_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            faceRecords_.AddEntriesFrom(input, _repeated_faceRecords_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VerificationRequest : pb::IMessage<VerificationRequest> {
    private static readonly pb::MessageParser<VerificationRequest> _parser = new pb::MessageParser<VerificationRequest>(() => new VerificationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerificationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationRequest(VerificationRequest other) : this() {
      gallery_ = other.gallery_;
      subjectId_ = other.subjectId_;
      faceRecord_ = other.faceRecord_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationRequest Clone() {
      return new VerificationRequest(this);
    }

    /// <summary>Field number for the "gallery" field.</summary>
    public const int GalleryFieldNumber = 1;
    private string gallery_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gallery {
      get { return gallery_; }
      set {
        gallery_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subject_id" field.</summary>
    public const int SubjectIdFieldNumber = 2;
    private string subjectId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubjectId {
      get { return subjectId_; }
      set {
        subjectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "face_record" field.</summary>
    public const int FaceRecordFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Faro.Proto.FaceRecord> _repeated_faceRecord_codec
        = pb::FieldCodec.ForMessage(26, global::Faro.Proto.FaceRecord.Parser);
    private readonly pbc::RepeatedField<global::Faro.Proto.FaceRecord> faceRecord_ = new pbc::RepeatedField<global::Faro.Proto.FaceRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Faro.Proto.FaceRecord> FaceRecord {
      get { return faceRecord_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerificationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerificationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gallery != other.Gallery) return false;
      if (SubjectId != other.SubjectId) return false;
      if(!faceRecord_.Equals(other.faceRecord_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gallery.Length != 0) hash ^= Gallery.GetHashCode();
      if (SubjectId.Length != 0) hash ^= SubjectId.GetHashCode();
      hash ^= faceRecord_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gallery.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Gallery);
      }
      if (SubjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SubjectId);
      }
      faceRecord_.WriteTo(output, _repeated_faceRecord_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gallery.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gallery);
      }
      if (SubjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubjectId);
      }
      size += faceRecord_.CalculateSize(_repeated_faceRecord_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerificationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Gallery.Length != 0) {
        Gallery = other.Gallery;
      }
      if (other.SubjectId.Length != 0) {
        SubjectId = other.SubjectId;
      }
      faceRecord_.Add(other.faceRecord_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Gallery = input.ReadString();
            break;
          }
          case 18: {
            SubjectId = input.ReadString();
            break;
          }
          case 26: {
            faceRecord_.AddEntriesFrom(input, _repeated_faceRecord_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VerificationResponse : pb::IMessage<VerificationResponse> {
    private static readonly pb::MessageParser<VerificationResponse> _parser = new pb::MessageParser<VerificationResponse>(() => new VerificationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerificationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationResponse(VerificationResponse other) : this() {
      errorCode_ = other.errorCode_;
      errorMessage_ = other.errorMessage_;
      success_ = other.success_;
      confidence_ = other.confidence_;
      matches_ = other.matches_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerificationResponse Clone() {
      return new VerificationResponse(this);
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 4;
    private int errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "error_message" field.</summary>
    public const int ErrorMessageFieldNumber = 5;
    private string errorMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "confidence" field.</summary>
    public const int ConfidenceFieldNumber = 2;
    private float confidence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Confidence {
      get { return confidence_; }
      set {
        confidence_ = value;
      }
    }

    /// <summary>Field number for the "matches" field.</summary>
    public const int MatchesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Faro.Proto.FaceRecord> _repeated_matches_codec
        = pb::FieldCodec.ForMessage(26, global::Faro.Proto.FaceRecord.Parser);
    private readonly pbc::RepeatedField<global::Faro.Proto.FaceRecord> matches_ = new pbc::RepeatedField<global::Faro.Proto.FaceRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Faro.Proto.FaceRecord> Matches {
      get { return matches_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerificationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerificationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      if (Success != other.Success) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Confidence, other.Confidence)) return false;
      if(!matches_.Equals(other.matches_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (Success != false) hash ^= Success.GetHashCode();
      if (Confidence != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Confidence);
      hash ^= matches_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (Confidence != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Confidence);
      }
      matches_.WriteTo(output, _repeated_matches_codec);
      if (ErrorCode != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (Success != false) {
        size += 1 + 1;
      }
      if (Confidence != 0F) {
        size += 1 + 4;
      }
      size += matches_.CalculateSize(_repeated_matches_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerificationResponse other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.Confidence != 0F) {
        Confidence = other.Confidence;
      }
      matches_.Add(other.matches_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 21: {
            Confidence = input.ReadFloat();
            break;
          }
          case 26: {
            matches_.AddEntriesFrom(input, _repeated_matches_codec);
            break;
          }
          case 32: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 42: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchRequest : pb::IMessage<SearchRequest> {
    private static readonly pb::MessageParser<SearchRequest> _parser = new pb::MessageParser<SearchRequest>(() => new SearchRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRequest(SearchRequest other) : this() {
      searchGallery_ = other.searchGallery_;
      probes_ = other.probes_ != null ? other.probes_.Clone() : null;
      maxResults_ = other.maxResults_;
      threshold_ = other.threshold_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRequest Clone() {
      return new SearchRequest(this);
    }

    /// <summary>Field number for the "search_gallery" field.</summary>
    public const int SearchGalleryFieldNumber = 1;
    private string searchGallery_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SearchGallery {
      get { return searchGallery_; }
      set {
        searchGallery_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "probes" field.</summary>
    public const int ProbesFieldNumber = 3;
    private global::Faro.Proto.FaceRecordList probes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.FaceRecordList Probes {
      get { return probes_; }
      set {
        probes_ = value;
      }
    }

    /// <summary>Field number for the "max_results" field.</summary>
    public const int MaxResultsFieldNumber = 4;
    private int maxResults_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxResults {
      get { return maxResults_; }
      set {
        maxResults_ = value;
      }
    }

    /// <summary>Field number for the "threshold" field.</summary>
    public const int ThresholdFieldNumber = 5;
    private float threshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Threshold {
      get { return threshold_; }
      set {
        threshold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SearchGallery != other.SearchGallery) return false;
      if (!object.Equals(Probes, other.Probes)) return false;
      if (MaxResults != other.MaxResults) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Threshold, other.Threshold)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SearchGallery.Length != 0) hash ^= SearchGallery.GetHashCode();
      if (probes_ != null) hash ^= Probes.GetHashCode();
      if (MaxResults != 0) hash ^= MaxResults.GetHashCode();
      if (Threshold != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Threshold);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SearchGallery.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SearchGallery);
      }
      if (probes_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Probes);
      }
      if (MaxResults != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxResults);
      }
      if (Threshold != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Threshold);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SearchGallery.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SearchGallery);
      }
      if (probes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Probes);
      }
      if (MaxResults != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxResults);
      }
      if (Threshold != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchRequest other) {
      if (other == null) {
        return;
      }
      if (other.SearchGallery.Length != 0) {
        SearchGallery = other.SearchGallery;
      }
      if (other.probes_ != null) {
        if (probes_ == null) {
          Probes = new global::Faro.Proto.FaceRecordList();
        }
        Probes.MergeFrom(other.Probes);
      }
      if (other.MaxResults != 0) {
        MaxResults = other.MaxResults;
      }
      if (other.Threshold != 0F) {
        Threshold = other.Threshold;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SearchGallery = input.ReadString();
            break;
          }
          case 26: {
            if (probes_ == null) {
              Probes = new global::Faro.Proto.FaceRecordList();
            }
            input.ReadMessage(Probes);
            break;
          }
          case 32: {
            MaxResults = input.ReadInt32();
            break;
          }
          case 45: {
            Threshold = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchResponse : pb::IMessage<SearchResponse> {
    private static readonly pb::MessageParser<SearchResponse> _parser = new pb::MessageParser<SearchResponse>(() => new SearchResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchResponse(SearchResponse other) : this() {
      message_ = other.message_ != null ? other.message_.Clone() : null;
      probes_ = other.probes_ != null ? other.probes_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchResponse Clone() {
      return new SearchResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private global::Faro.Proto.ErrorMessage message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.ErrorMessage Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    /// <summary>Field number for the "probes" field.</summary>
    public const int ProbesFieldNumber = 2;
    private global::Faro.Proto.FaceRecordList probes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.FaceRecordList Probes {
      get { return probes_; }
      set {
        probes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Message, other.Message)) return false;
      if (!object.Equals(Probes, other.Probes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (message_ != null) hash ^= Message.GetHashCode();
      if (probes_ != null) hash ^= Probes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (message_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Message);
      }
      if (probes_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Probes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (probes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Probes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchResponse other) {
      if (other == null) {
        return;
      }
      if (other.message_ != null) {
        if (message_ == null) {
          Message = new global::Faro.Proto.ErrorMessage();
        }
        Message.MergeFrom(other.Message);
      }
      if (other.probes_ != null) {
        if (probes_ == null) {
          Probes = new global::Faro.Proto.FaceRecordList();
        }
        Probes.MergeFrom(other.Probes);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (message_ == null) {
              Message = new global::Faro.Proto.ErrorMessage();
            }
            input.ReadMessage(Message);
            break;
          }
          case 18: {
            if (probes_ == null) {
              Probes = new global::Faro.Proto.FaceRecordList();
            }
            input.ReadMessage(Probes);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EnrollRequest : pb::IMessage<EnrollRequest> {
    private static readonly pb::MessageParser<EnrollRequest> _parser = new pb::MessageParser<EnrollRequest>(() => new EnrollRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnrollRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnrollRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnrollRequest(EnrollRequest other) : this() {
      enrollGallery_ = other.enrollGallery_;
      records_ = other.records_ != null ? other.records_.Clone() : null;
      enrollOptions_ = other.enrollOptions_ != null ? other.enrollOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnrollRequest Clone() {
      return new EnrollRequest(this);
    }

    /// <summary>Field number for the "enroll_gallery" field.</summary>
    public const int EnrollGalleryFieldNumber = 1;
    private string enrollGallery_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EnrollGallery {
      get { return enrollGallery_; }
      set {
        enrollGallery_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "records" field.</summary>
    public const int RecordsFieldNumber = 2;
    private global::Faro.Proto.FaceRecordList records_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.FaceRecordList Records {
      get { return records_; }
      set {
        records_ = value;
      }
    }

    /// <summary>Field number for the "enroll_options" field.</summary>
    public const int EnrollOptionsFieldNumber = 10;
    private global::Faro.Proto.EnrollOptions enrollOptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.EnrollOptions EnrollOptions {
      get { return enrollOptions_; }
      set {
        enrollOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnrollRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnrollRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnrollGallery != other.EnrollGallery) return false;
      if (!object.Equals(Records, other.Records)) return false;
      if (!object.Equals(EnrollOptions, other.EnrollOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EnrollGallery.Length != 0) hash ^= EnrollGallery.GetHashCode();
      if (records_ != null) hash ^= Records.GetHashCode();
      if (enrollOptions_ != null) hash ^= EnrollOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EnrollGallery.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EnrollGallery);
      }
      if (records_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Records);
      }
      if (enrollOptions_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(EnrollOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EnrollGallery.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EnrollGallery);
      }
      if (records_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Records);
      }
      if (enrollOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnrollOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnrollRequest other) {
      if (other == null) {
        return;
      }
      if (other.EnrollGallery.Length != 0) {
        EnrollGallery = other.EnrollGallery;
      }
      if (other.records_ != null) {
        if (records_ == null) {
          Records = new global::Faro.Proto.FaceRecordList();
        }
        Records.MergeFrom(other.Records);
      }
      if (other.enrollOptions_ != null) {
        if (enrollOptions_ == null) {
          EnrollOptions = new global::Faro.Proto.EnrollOptions();
        }
        EnrollOptions.MergeFrom(other.EnrollOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EnrollGallery = input.ReadString();
            break;
          }
          case 18: {
            if (records_ == null) {
              Records = new global::Faro.Proto.FaceRecordList();
            }
            input.ReadMessage(Records);
            break;
          }
          case 82: {
            if (enrollOptions_ == null) {
              EnrollOptions = new global::Faro.Proto.EnrollOptions();
            }
            input.ReadMessage(EnrollOptions);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DetectRequest : pb::IMessage<DetectRequest> {
    private static readonly pb::MessageParser<DetectRequest> _parser = new pb::MessageParser<DetectRequest>(() => new DetectRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectRequest(DetectRequest other) : this() {
      image_ = other.image_ != null ? other.image_.Clone() : null;
      source_ = other.source_;
      frame_ = other.frame_;
      subjectId_ = other.subjectId_;
      subjectName_ = other.subjectName_;
      detectOptions_ = other.detectOptions_ != null ? other.detectOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectRequest Clone() {
      return new DetectRequest(this);
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 1;
    private global::Faro.Proto.Image image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.Image Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 2;
    private string source_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return source_; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "frame" field.</summary>
    public const int FrameFieldNumber = 3;
    private long frame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Frame {
      get { return frame_; }
      set {
        frame_ = value;
      }
    }

    /// <summary>Field number for the "subject_id" field.</summary>
    public const int SubjectIdFieldNumber = 4;
    private string subjectId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubjectId {
      get { return subjectId_; }
      set {
        subjectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subject_name" field.</summary>
    public const int SubjectNameFieldNumber = 5;
    private string subjectName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubjectName {
      get { return subjectName_; }
      set {
        subjectName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "detect_options" field.</summary>
    public const int DetectOptionsFieldNumber = 8;
    private global::Faro.Proto.DetectionOptions detectOptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.DetectionOptions DetectOptions {
      get { return detectOptions_; }
      set {
        detectOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Image, other.Image)) return false;
      if (Source != other.Source) return false;
      if (Frame != other.Frame) return false;
      if (SubjectId != other.SubjectId) return false;
      if (SubjectName != other.SubjectName) return false;
      if (!object.Equals(DetectOptions, other.DetectOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (image_ != null) hash ^= Image.GetHashCode();
      if (Source.Length != 0) hash ^= Source.GetHashCode();
      if (Frame != 0L) hash ^= Frame.GetHashCode();
      if (SubjectId.Length != 0) hash ^= SubjectId.GetHashCode();
      if (SubjectName.Length != 0) hash ^= SubjectName.GetHashCode();
      if (detectOptions_ != null) hash ^= DetectOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (image_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Image);
      }
      if (Source.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Source);
      }
      if (Frame != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Frame);
      }
      if (SubjectId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SubjectId);
      }
      if (SubjectName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SubjectName);
      }
      if (detectOptions_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(DetectOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (Source.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (Frame != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Frame);
      }
      if (SubjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubjectId);
      }
      if (SubjectName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubjectName);
      }
      if (detectOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DetectOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetectRequest other) {
      if (other == null) {
        return;
      }
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::Faro.Proto.Image();
        }
        Image.MergeFrom(other.Image);
      }
      if (other.Source.Length != 0) {
        Source = other.Source;
      }
      if (other.Frame != 0L) {
        Frame = other.Frame;
      }
      if (other.SubjectId.Length != 0) {
        SubjectId = other.SubjectId;
      }
      if (other.SubjectName.Length != 0) {
        SubjectName = other.SubjectName;
      }
      if (other.detectOptions_ != null) {
        if (detectOptions_ == null) {
          DetectOptions = new global::Faro.Proto.DetectionOptions();
        }
        DetectOptions.MergeFrom(other.DetectOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (image_ == null) {
              Image = new global::Faro.Proto.Image();
            }
            input.ReadMessage(Image);
            break;
          }
          case 18: {
            Source = input.ReadString();
            break;
          }
          case 24: {
            Frame = input.ReadInt64();
            break;
          }
          case 34: {
            SubjectId = input.ReadString();
            break;
          }
          case 42: {
            SubjectName = input.ReadString();
            break;
          }
          case 66: {
            if (detectOptions_ == null) {
              DetectOptions = new global::Faro.Proto.DetectionOptions();
            }
            input.ReadMessage(DetectOptions);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExtractRequest : pb::IMessage<ExtractRequest> {
    private static readonly pb::MessageParser<ExtractRequest> _parser = new pb::MessageParser<ExtractRequest>(() => new ExtractRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExtractRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtractRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtractRequest(ExtractRequest other) : this() {
      image_ = other.image_ != null ? other.image_.Clone() : null;
      records_ = other.records_ != null ? other.records_.Clone() : null;
      extractOptions_ = other.extractOptions_ != null ? other.extractOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExtractRequest Clone() {
      return new ExtractRequest(this);
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 1;
    private global::Faro.Proto.Image image_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.Image Image {
      get { return image_; }
      set {
        image_ = value;
      }
    }

    /// <summary>Field number for the "records" field.</summary>
    public const int RecordsFieldNumber = 4;
    private global::Faro.Proto.FaceRecordList records_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.FaceRecordList Records {
      get { return records_; }
      set {
        records_ = value;
      }
    }

    /// <summary>Field number for the "extract_options" field.</summary>
    public const int ExtractOptionsFieldNumber = 9;
    private global::Faro.Proto.ExtractOptions extractOptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.ExtractOptions ExtractOptions {
      get { return extractOptions_; }
      set {
        extractOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExtractRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExtractRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Image, other.Image)) return false;
      if (!object.Equals(Records, other.Records)) return false;
      if (!object.Equals(ExtractOptions, other.ExtractOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (image_ != null) hash ^= Image.GetHashCode();
      if (records_ != null) hash ^= Records.GetHashCode();
      if (extractOptions_ != null) hash ^= ExtractOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (image_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Image);
      }
      if (records_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Records);
      }
      if (extractOptions_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ExtractOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (image_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (records_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Records);
      }
      if (extractOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtractOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExtractRequest other) {
      if (other == null) {
        return;
      }
      if (other.image_ != null) {
        if (image_ == null) {
          Image = new global::Faro.Proto.Image();
        }
        Image.MergeFrom(other.Image);
      }
      if (other.records_ != null) {
        if (records_ == null) {
          Records = new global::Faro.Proto.FaceRecordList();
        }
        Records.MergeFrom(other.Records);
      }
      if (other.extractOptions_ != null) {
        if (extractOptions_ == null) {
          ExtractOptions = new global::Faro.Proto.ExtractOptions();
        }
        ExtractOptions.MergeFrom(other.ExtractOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (image_ == null) {
              Image = new global::Faro.Proto.Image();
            }
            input.ReadMessage(Image);
            break;
          }
          case 34: {
            if (records_ == null) {
              Records = new global::Faro.Proto.FaceRecordList();
            }
            input.ReadMessage(Records);
            break;
          }
          case 74: {
            if (extractOptions_ == null) {
              ExtractOptions = new global::Faro.Proto.ExtractOptions();
            }
            input.ReadMessage(ExtractOptions);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// suggested : typically use TemplateLists because they are smaller. Then
  ///             FaceRecordLists should be left empty.
  ///
  /// FaceRecordsList can be used as a convieniance but may be too large,
  /// slow, or use to much band with.
  /// </summary>
  public sealed partial class ScoreRequest : pb::IMessage<ScoreRequest> {
    private static readonly pb::MessageParser<ScoreRequest> _parser = new pb::MessageParser<ScoreRequest>(() => new ScoreRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScoreRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScoreRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScoreRequest(ScoreRequest other) : this() {
      faceProbes_ = other.faceProbes_ != null ? other.faceProbes_.Clone() : null;
      faceGallery_ = other.faceGallery_ != null ? other.faceGallery_.Clone() : null;
      templateProbes_ = other.templateProbes_ != null ? other.templateProbes_.Clone() : null;
      templateGallery_ = other.templateGallery_ != null ? other.templateGallery_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScoreRequest Clone() {
      return new ScoreRequest(this);
    }

    /// <summary>Field number for the "face_probes" field.</summary>
    public const int FaceProbesFieldNumber = 1;
    private global::Faro.Proto.FaceRecordList faceProbes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.FaceRecordList FaceProbes {
      get { return faceProbes_; }
      set {
        faceProbes_ = value;
      }
    }

    /// <summary>Field number for the "face_gallery" field.</summary>
    public const int FaceGalleryFieldNumber = 2;
    private global::Faro.Proto.FaceRecordList faceGallery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.FaceRecordList FaceGallery {
      get { return faceGallery_; }
      set {
        faceGallery_ = value;
      }
    }

    /// <summary>Field number for the "template_probes" field.</summary>
    public const int TemplateProbesFieldNumber = 3;
    private global::Faro.Proto.TemplateList templateProbes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.TemplateList TemplateProbes {
      get { return templateProbes_; }
      set {
        templateProbes_ = value;
      }
    }

    /// <summary>Field number for the "template_gallery" field.</summary>
    public const int TemplateGalleryFieldNumber = 4;
    private global::Faro.Proto.TemplateList templateGallery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.TemplateList TemplateGallery {
      get { return templateGallery_; }
      set {
        templateGallery_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScoreRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScoreRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FaceProbes, other.FaceProbes)) return false;
      if (!object.Equals(FaceGallery, other.FaceGallery)) return false;
      if (!object.Equals(TemplateProbes, other.TemplateProbes)) return false;
      if (!object.Equals(TemplateGallery, other.TemplateGallery)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (faceProbes_ != null) hash ^= FaceProbes.GetHashCode();
      if (faceGallery_ != null) hash ^= FaceGallery.GetHashCode();
      if (templateProbes_ != null) hash ^= TemplateProbes.GetHashCode();
      if (templateGallery_ != null) hash ^= TemplateGallery.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (faceProbes_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FaceProbes);
      }
      if (faceGallery_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FaceGallery);
      }
      if (templateProbes_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TemplateProbes);
      }
      if (templateGallery_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TemplateGallery);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (faceProbes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FaceProbes);
      }
      if (faceGallery_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FaceGallery);
      }
      if (templateProbes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TemplateProbes);
      }
      if (templateGallery_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TemplateGallery);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScoreRequest other) {
      if (other == null) {
        return;
      }
      if (other.faceProbes_ != null) {
        if (faceProbes_ == null) {
          FaceProbes = new global::Faro.Proto.FaceRecordList();
        }
        FaceProbes.MergeFrom(other.FaceProbes);
      }
      if (other.faceGallery_ != null) {
        if (faceGallery_ == null) {
          FaceGallery = new global::Faro.Proto.FaceRecordList();
        }
        FaceGallery.MergeFrom(other.FaceGallery);
      }
      if (other.templateProbes_ != null) {
        if (templateProbes_ == null) {
          TemplateProbes = new global::Faro.Proto.TemplateList();
        }
        TemplateProbes.MergeFrom(other.TemplateProbes);
      }
      if (other.templateGallery_ != null) {
        if (templateGallery_ == null) {
          TemplateGallery = new global::Faro.Proto.TemplateList();
        }
        TemplateGallery.MergeFrom(other.TemplateGallery);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (faceProbes_ == null) {
              FaceProbes = new global::Faro.Proto.FaceRecordList();
            }
            input.ReadMessage(FaceProbes);
            break;
          }
          case 18: {
            if (faceGallery_ == null) {
              FaceGallery = new global::Faro.Proto.FaceRecordList();
            }
            input.ReadMessage(FaceGallery);
            break;
          }
          case 26: {
            if (templateProbes_ == null) {
              TemplateProbes = new global::Faro.Proto.TemplateList();
            }
            input.ReadMessage(TemplateProbes);
            break;
          }
          case 34: {
            if (templateGallery_ == null) {
              TemplateGallery = new global::Faro.Proto.TemplateList();
            }
            input.ReadMessage(TemplateGallery);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///***************************************************************************
  /// Combined operations
  ///
  /// These allow calling the server once and executing multiple operations in
  /// sequence.  This should save time and network bandwidth for common
  /// operations.  When calling combined results some arguments from the
  /// later calls will be ignored and if present then replaced by the results
  /// of the earlier calls.  It is recommended that those arguments are left
  /// empty to save bandwidth.
  ///*************************************************************************
  /// </summary>
  public sealed partial class DetectExtractRequest : pb::IMessage<DetectExtractRequest> {
    private static readonly pb::MessageParser<DetectExtractRequest> _parser = new pb::MessageParser<DetectExtractRequest>(() => new DetectExtractRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetectExtractRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectExtractRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectExtractRequest(DetectExtractRequest other) : this() {
      detectRequest_ = other.detectRequest_ != null ? other.detectRequest_.Clone() : null;
      extractRequest_ = other.extractRequest_ != null ? other.extractRequest_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectExtractRequest Clone() {
      return new DetectExtractRequest(this);
    }

    /// <summary>Field number for the "detect_request" field.</summary>
    public const int DetectRequestFieldNumber = 1;
    private global::Faro.Proto.DetectRequest detectRequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.DetectRequest DetectRequest {
      get { return detectRequest_; }
      set {
        detectRequest_ = value;
      }
    }

    /// <summary>Field number for the "extract_request" field.</summary>
    public const int ExtractRequestFieldNumber = 2;
    private global::Faro.Proto.ExtractRequest extractRequest_;
    /// <summary>
    /// The image and face list are replaced by the result of the detect results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.ExtractRequest ExtractRequest {
      get { return extractRequest_; }
      set {
        extractRequest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetectExtractRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetectExtractRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DetectRequest, other.DetectRequest)) return false;
      if (!object.Equals(ExtractRequest, other.ExtractRequest)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (detectRequest_ != null) hash ^= DetectRequest.GetHashCode();
      if (extractRequest_ != null) hash ^= ExtractRequest.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (detectRequest_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DetectRequest);
      }
      if (extractRequest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ExtractRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (detectRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DetectRequest);
      }
      if (extractRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtractRequest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetectExtractRequest other) {
      if (other == null) {
        return;
      }
      if (other.detectRequest_ != null) {
        if (detectRequest_ == null) {
          DetectRequest = new global::Faro.Proto.DetectRequest();
        }
        DetectRequest.MergeFrom(other.DetectRequest);
      }
      if (other.extractRequest_ != null) {
        if (extractRequest_ == null) {
          ExtractRequest = new global::Faro.Proto.ExtractRequest();
        }
        ExtractRequest.MergeFrom(other.ExtractRequest);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (detectRequest_ == null) {
              DetectRequest = new global::Faro.Proto.DetectRequest();
            }
            input.ReadMessage(DetectRequest);
            break;
          }
          case 18: {
            if (extractRequest_ == null) {
              ExtractRequest = new global::Faro.Proto.ExtractRequest();
            }
            input.ReadMessage(ExtractRequest);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DetectExtractEnrollRequest : pb::IMessage<DetectExtractEnrollRequest> {
    private static readonly pb::MessageParser<DetectExtractEnrollRequest> _parser = new pb::MessageParser<DetectExtractEnrollRequest>(() => new DetectExtractEnrollRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetectExtractEnrollRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectExtractEnrollRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectExtractEnrollRequest(DetectExtractEnrollRequest other) : this() {
      detectRequest_ = other.detectRequest_ != null ? other.detectRequest_.Clone() : null;
      extractRequest_ = other.extractRequest_ != null ? other.extractRequest_.Clone() : null;
      enrollRequest_ = other.enrollRequest_ != null ? other.enrollRequest_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectExtractEnrollRequest Clone() {
      return new DetectExtractEnrollRequest(this);
    }

    /// <summary>Field number for the "detect_request" field.</summary>
    public const int DetectRequestFieldNumber = 1;
    private global::Faro.Proto.DetectRequest detectRequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.DetectRequest DetectRequest {
      get { return detectRequest_; }
      set {
        detectRequest_ = value;
      }
    }

    /// <summary>Field number for the "extract_request" field.</summary>
    public const int ExtractRequestFieldNumber = 2;
    private global::Faro.Proto.ExtractRequest extractRequest_;
    /// <summary>
    /// The image and face list are replaced by the result of the detect results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.ExtractRequest ExtractRequest {
      get { return extractRequest_; }
      set {
        extractRequest_ = value;
      }
    }

    /// <summary>Field number for the "enroll_request" field.</summary>
    public const int EnrollRequestFieldNumber = 3;
    private global::Faro.Proto.EnrollRequest enrollRequest_;
    /// <summary>
    /// The face list is replaced by the result of the extract results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.EnrollRequest EnrollRequest {
      get { return enrollRequest_; }
      set {
        enrollRequest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetectExtractEnrollRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetectExtractEnrollRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DetectRequest, other.DetectRequest)) return false;
      if (!object.Equals(ExtractRequest, other.ExtractRequest)) return false;
      if (!object.Equals(EnrollRequest, other.EnrollRequest)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (detectRequest_ != null) hash ^= DetectRequest.GetHashCode();
      if (extractRequest_ != null) hash ^= ExtractRequest.GetHashCode();
      if (enrollRequest_ != null) hash ^= EnrollRequest.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (detectRequest_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DetectRequest);
      }
      if (extractRequest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ExtractRequest);
      }
      if (enrollRequest_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EnrollRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (detectRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DetectRequest);
      }
      if (extractRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtractRequest);
      }
      if (enrollRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnrollRequest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetectExtractEnrollRequest other) {
      if (other == null) {
        return;
      }
      if (other.detectRequest_ != null) {
        if (detectRequest_ == null) {
          DetectRequest = new global::Faro.Proto.DetectRequest();
        }
        DetectRequest.MergeFrom(other.DetectRequest);
      }
      if (other.extractRequest_ != null) {
        if (extractRequest_ == null) {
          ExtractRequest = new global::Faro.Proto.ExtractRequest();
        }
        ExtractRequest.MergeFrom(other.ExtractRequest);
      }
      if (other.enrollRequest_ != null) {
        if (enrollRequest_ == null) {
          EnrollRequest = new global::Faro.Proto.EnrollRequest();
        }
        EnrollRequest.MergeFrom(other.EnrollRequest);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (detectRequest_ == null) {
              DetectRequest = new global::Faro.Proto.DetectRequest();
            }
            input.ReadMessage(DetectRequest);
            break;
          }
          case 18: {
            if (extractRequest_ == null) {
              ExtractRequest = new global::Faro.Proto.ExtractRequest();
            }
            input.ReadMessage(ExtractRequest);
            break;
          }
          case 26: {
            if (enrollRequest_ == null) {
              EnrollRequest = new global::Faro.Proto.EnrollRequest();
            }
            input.ReadMessage(EnrollRequest);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DetectExtractSearchRequest : pb::IMessage<DetectExtractSearchRequest> {
    private static readonly pb::MessageParser<DetectExtractSearchRequest> _parser = new pb::MessageParser<DetectExtractSearchRequest>(() => new DetectExtractSearchRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetectExtractSearchRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectExtractSearchRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectExtractSearchRequest(DetectExtractSearchRequest other) : this() {
      detectRequest_ = other.detectRequest_ != null ? other.detectRequest_.Clone() : null;
      extractRequest_ = other.extractRequest_ != null ? other.extractRequest_.Clone() : null;
      searchRequest_ = other.searchRequest_ != null ? other.searchRequest_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetectExtractSearchRequest Clone() {
      return new DetectExtractSearchRequest(this);
    }

    /// <summary>Field number for the "detect_request" field.</summary>
    public const int DetectRequestFieldNumber = 1;
    private global::Faro.Proto.DetectRequest detectRequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.DetectRequest DetectRequest {
      get { return detectRequest_; }
      set {
        detectRequest_ = value;
      }
    }

    /// <summary>Field number for the "extract_request" field.</summary>
    public const int ExtractRequestFieldNumber = 2;
    private global::Faro.Proto.ExtractRequest extractRequest_;
    /// <summary>
    /// The image and face list are replaced by the result of the detect results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.ExtractRequest ExtractRequest {
      get { return extractRequest_; }
      set {
        extractRequest_ = value;
      }
    }

    /// <summary>Field number for the "search_request" field.</summary>
    public const int SearchRequestFieldNumber = 3;
    private global::Faro.Proto.SearchRequest searchRequest_;
    /// <summary>
    /// The face list is replaced by the result of the extract results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.SearchRequest SearchRequest {
      get { return searchRequest_; }
      set {
        searchRequest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetectExtractSearchRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetectExtractSearchRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DetectRequest, other.DetectRequest)) return false;
      if (!object.Equals(ExtractRequest, other.ExtractRequest)) return false;
      if (!object.Equals(SearchRequest, other.SearchRequest)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (detectRequest_ != null) hash ^= DetectRequest.GetHashCode();
      if (extractRequest_ != null) hash ^= ExtractRequest.GetHashCode();
      if (searchRequest_ != null) hash ^= SearchRequest.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (detectRequest_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DetectRequest);
      }
      if (extractRequest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ExtractRequest);
      }
      if (searchRequest_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SearchRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (detectRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DetectRequest);
      }
      if (extractRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtractRequest);
      }
      if (searchRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SearchRequest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetectExtractSearchRequest other) {
      if (other == null) {
        return;
      }
      if (other.detectRequest_ != null) {
        if (detectRequest_ == null) {
          DetectRequest = new global::Faro.Proto.DetectRequest();
        }
        DetectRequest.MergeFrom(other.DetectRequest);
      }
      if (other.extractRequest_ != null) {
        if (extractRequest_ == null) {
          ExtractRequest = new global::Faro.Proto.ExtractRequest();
        }
        ExtractRequest.MergeFrom(other.ExtractRequest);
      }
      if (other.searchRequest_ != null) {
        if (searchRequest_ == null) {
          SearchRequest = new global::Faro.Proto.SearchRequest();
        }
        SearchRequest.MergeFrom(other.SearchRequest);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (detectRequest_ == null) {
              DetectRequest = new global::Faro.Proto.DetectRequest();
            }
            input.ReadMessage(DetectRequest);
            break;
          }
          case 18: {
            if (extractRequest_ == null) {
              ExtractRequest = new global::Faro.Proto.ExtractRequest();
            }
            input.ReadMessage(ExtractRequest);
            break;
          }
          case 26: {
            if (searchRequest_ == null) {
              SearchRequest = new global::Faro.Proto.SearchRequest();
            }
            input.ReadMessage(SearchRequest);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FaceStatusRequest : pb::IMessage<FaceStatusRequest> {
    private static readonly pb::MessageParser<FaceStatusRequest> _parser = new pb::MessageParser<FaceStatusRequest>(() => new FaceStatusRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FaceStatusRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceStatusRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceStatusRequest(FaceStatusRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceStatusRequest Clone() {
      return new FaceStatusRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FaceStatusRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FaceStatusRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FaceStatusRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class FaceServiceInfo : pb::IMessage<FaceServiceInfo> {
    private static readonly pb::MessageParser<FaceServiceInfo> _parser = new pb::MessageParser<FaceServiceInfo>(() => new FaceServiceInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FaceServiceInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceServiceInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceServiceInfo(FaceServiceInfo other) : this() {
      status_ = other.status_;
      workerCount_ = other.workerCount_;
      detectionSupport_ = other.detectionSupport_;
      extractSupport_ = other.extractSupport_;
      scoreSupport_ = other.scoreSupport_;
      attributeSupport_ = other.attributeSupport_;
      scoreType_ = other.scoreType_;
      detectionThreshold_ = other.detectionThreshold_;
      matchThreshold_ = other.matchThreshold_;
      algorithm_ = other.algorithm_;
      notes_ = other.notes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FaceServiceInfo Clone() {
      return new FaceServiceInfo(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Faro.Proto.ServiceStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.ServiceStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "worker_count" field.</summary>
    public const int WorkerCountFieldNumber = 2;
    private int workerCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WorkerCount {
      get { return workerCount_; }
      set {
        workerCount_ = value;
      }
    }

    /// <summary>Field number for the "detection_support" field.</summary>
    public const int DetectionSupportFieldNumber = 3;
    private bool detectionSupport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DetectionSupport {
      get { return detectionSupport_; }
      set {
        detectionSupport_ = value;
      }
    }

    /// <summary>Field number for the "extract_support" field.</summary>
    public const int ExtractSupportFieldNumber = 4;
    private bool extractSupport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ExtractSupport {
      get { return extractSupport_; }
      set {
        extractSupport_ = value;
      }
    }

    /// <summary>Field number for the "score_support" field.</summary>
    public const int ScoreSupportFieldNumber = 5;
    private bool scoreSupport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ScoreSupport {
      get { return scoreSupport_; }
      set {
        scoreSupport_ = value;
      }
    }

    /// <summary>Field number for the "attribute_support" field.</summary>
    public const int AttributeSupportFieldNumber = 6;
    private bool attributeSupport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AttributeSupport {
      get { return attributeSupport_; }
      set {
        attributeSupport_ = value;
      }
    }

    /// <summary>Field number for the "score_type" field.</summary>
    public const int ScoreTypeFieldNumber = 7;
    private global::Faro.Proto.ScoreType scoreType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Faro.Proto.ScoreType ScoreType {
      get { return scoreType_; }
      set {
        scoreType_ = value;
      }
    }

    /// <summary>Field number for the "detection_threshold" field.</summary>
    public const int DetectionThresholdFieldNumber = 8;
    private float detectionThreshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float DetectionThreshold {
      get { return detectionThreshold_; }
      set {
        detectionThreshold_ = value;
      }
    }

    /// <summary>Field number for the "match_threshold" field.</summary>
    public const int MatchThresholdFieldNumber = 9;
    private float matchThreshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MatchThreshold {
      get { return matchThreshold_; }
      set {
        matchThreshold_ = value;
      }
    }

    /// <summary>Field number for the "algorithm" field.</summary>
    public const int AlgorithmFieldNumber = 10;
    private string algorithm_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Algorithm {
      get { return algorithm_; }
      set {
        algorithm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "notes" field.</summary>
    public const int NotesFieldNumber = 11;
    private string notes_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Notes {
      get { return notes_; }
      set {
        notes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FaceServiceInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FaceServiceInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (WorkerCount != other.WorkerCount) return false;
      if (DetectionSupport != other.DetectionSupport) return false;
      if (ExtractSupport != other.ExtractSupport) return false;
      if (ScoreSupport != other.ScoreSupport) return false;
      if (AttributeSupport != other.AttributeSupport) return false;
      if (ScoreType != other.ScoreType) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DetectionThreshold, other.DetectionThreshold)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MatchThreshold, other.MatchThreshold)) return false;
      if (Algorithm != other.Algorithm) return false;
      if (Notes != other.Notes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (WorkerCount != 0) hash ^= WorkerCount.GetHashCode();
      if (DetectionSupport != false) hash ^= DetectionSupport.GetHashCode();
      if (ExtractSupport != false) hash ^= ExtractSupport.GetHashCode();
      if (ScoreSupport != false) hash ^= ScoreSupport.GetHashCode();
      if (AttributeSupport != false) hash ^= AttributeSupport.GetHashCode();
      if (ScoreType != 0) hash ^= ScoreType.GetHashCode();
      if (DetectionThreshold != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DetectionThreshold);
      if (MatchThreshold != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MatchThreshold);
      if (Algorithm.Length != 0) hash ^= Algorithm.GetHashCode();
      if (Notes.Length != 0) hash ^= Notes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (WorkerCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(WorkerCount);
      }
      if (DetectionSupport != false) {
        output.WriteRawTag(24);
        output.WriteBool(DetectionSupport);
      }
      if (ExtractSupport != false) {
        output.WriteRawTag(32);
        output.WriteBool(ExtractSupport);
      }
      if (ScoreSupport != false) {
        output.WriteRawTag(40);
        output.WriteBool(ScoreSupport);
      }
      if (AttributeSupport != false) {
        output.WriteRawTag(48);
        output.WriteBool(AttributeSupport);
      }
      if (ScoreType != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) ScoreType);
      }
      if (DetectionThreshold != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(DetectionThreshold);
      }
      if (MatchThreshold != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(MatchThreshold);
      }
      if (Algorithm.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Algorithm);
      }
      if (Notes.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Notes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (WorkerCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WorkerCount);
      }
      if (DetectionSupport != false) {
        size += 1 + 1;
      }
      if (ExtractSupport != false) {
        size += 1 + 1;
      }
      if (ScoreSupport != false) {
        size += 1 + 1;
      }
      if (AttributeSupport != false) {
        size += 1 + 1;
      }
      if (ScoreType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ScoreType);
      }
      if (DetectionThreshold != 0F) {
        size += 1 + 4;
      }
      if (MatchThreshold != 0F) {
        size += 1 + 4;
      }
      if (Algorithm.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Algorithm);
      }
      if (Notes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Notes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FaceServiceInfo other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.WorkerCount != 0) {
        WorkerCount = other.WorkerCount;
      }
      if (other.DetectionSupport != false) {
        DetectionSupport = other.DetectionSupport;
      }
      if (other.ExtractSupport != false) {
        ExtractSupport = other.ExtractSupport;
      }
      if (other.ScoreSupport != false) {
        ScoreSupport = other.ScoreSupport;
      }
      if (other.AttributeSupport != false) {
        AttributeSupport = other.AttributeSupport;
      }
      if (other.ScoreType != 0) {
        ScoreType = other.ScoreType;
      }
      if (other.DetectionThreshold != 0F) {
        DetectionThreshold = other.DetectionThreshold;
      }
      if (other.MatchThreshold != 0F) {
        MatchThreshold = other.MatchThreshold;
      }
      if (other.Algorithm.Length != 0) {
        Algorithm = other.Algorithm;
      }
      if (other.Notes.Length != 0) {
        Notes = other.Notes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::Faro.Proto.ServiceStatus) input.ReadEnum();
            break;
          }
          case 16: {
            WorkerCount = input.ReadInt32();
            break;
          }
          case 24: {
            DetectionSupport = input.ReadBool();
            break;
          }
          case 32: {
            ExtractSupport = input.ReadBool();
            break;
          }
          case 40: {
            ScoreSupport = input.ReadBool();
            break;
          }
          case 48: {
            AttributeSupport = input.ReadBool();
            break;
          }
          case 56: {
            ScoreType = (global::Faro.Proto.ScoreType) input.ReadEnum();
            break;
          }
          case 69: {
            DetectionThreshold = input.ReadFloat();
            break;
          }
          case 77: {
            MatchThreshold = input.ReadFloat();
            break;
          }
          case 82: {
            Algorithm = input.ReadString();
            break;
          }
          case 90: {
            Notes = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///******** Gallery Management *******
  /// </summary>
  public sealed partial class GalleryListRequest : pb::IMessage<GalleryListRequest> {
    private static readonly pb::MessageParser<GalleryListRequest> _parser = new pb::MessageParser<GalleryListRequest>(() => new GalleryListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GalleryListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GalleryListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GalleryListRequest(GalleryListRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GalleryListRequest Clone() {
      return new GalleryListRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GalleryListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GalleryListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GalleryListRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GalleryDeleteRequest : pb::IMessage<GalleryDeleteRequest> {
    private static readonly pb::MessageParser<GalleryDeleteRequest> _parser = new pb::MessageParser<GalleryDeleteRequest>(() => new GalleryDeleteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GalleryDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GalleryDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GalleryDeleteRequest(GalleryDeleteRequest other) : this() {
      galleryName_ = other.galleryName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GalleryDeleteRequest Clone() {
      return new GalleryDeleteRequest(this);
    }

    /// <summary>Field number for the "gallery_name" field.</summary>
    public const int GalleryNameFieldNumber = 1;
    private string galleryName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GalleryName {
      get { return galleryName_; }
      set {
        galleryName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GalleryDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GalleryDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GalleryName != other.GalleryName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GalleryName.Length != 0) hash ^= GalleryName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GalleryName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GalleryName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GalleryName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GalleryName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GalleryDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.GalleryName.Length != 0) {
        GalleryName = other.GalleryName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GalleryName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///******** Enrollment Management *******
  /// </summary>
  public sealed partial class EnrollmentListRequest : pb::IMessage<EnrollmentListRequest> {
    private static readonly pb::MessageParser<EnrollmentListRequest> _parser = new pb::MessageParser<EnrollmentListRequest>(() => new EnrollmentListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnrollmentListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnrollmentListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnrollmentListRequest(EnrollmentListRequest other) : this() {
      galleryName_ = other.galleryName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnrollmentListRequest Clone() {
      return new EnrollmentListRequest(this);
    }

    /// <summary>Field number for the "gallery_name" field.</summary>
    public const int GalleryNameFieldNumber = 1;
    private string galleryName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GalleryName {
      get { return galleryName_; }
      set {
        galleryName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnrollmentListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnrollmentListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GalleryName != other.GalleryName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GalleryName.Length != 0) hash ^= GalleryName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GalleryName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GalleryName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GalleryName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GalleryName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnrollmentListRequest other) {
      if (other == null) {
        return;
      }
      if (other.GalleryName.Length != 0) {
        GalleryName = other.GalleryName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GalleryName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EnrollmentInfo : pb::IMessage<EnrollmentInfo> {
    private static readonly pb::MessageParser<EnrollmentInfo> _parser = new pb::MessageParser<EnrollmentInfo>(() => new EnrollmentInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnrollmentInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnrollmentInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnrollmentInfo(EnrollmentInfo other) : this() {
      subjectId_ = other.subjectId_;
      name_ = other.name_;
      faceCount_ = other.faceCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnrollmentInfo Clone() {
      return new EnrollmentInfo(this);
    }

    /// <summary>Field number for the "subject_id" field.</summary>
    public const int SubjectIdFieldNumber = 1;
    private string subjectId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubjectId {
      get { return subjectId_; }
      set {
        subjectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "face_count" field.</summary>
    public const int FaceCountFieldNumber = 3;
    private int faceCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FaceCount {
      get { return faceCount_; }
      set {
        faceCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnrollmentInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnrollmentInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubjectId != other.SubjectId) return false;
      if (Name != other.Name) return false;
      if (FaceCount != other.FaceCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubjectId.Length != 0) hash ^= SubjectId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (FaceCount != 0) hash ^= FaceCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SubjectId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (FaceCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FaceCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubjectId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (FaceCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FaceCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnrollmentInfo other) {
      if (other == null) {
        return;
      }
      if (other.SubjectId.Length != 0) {
        SubjectId = other.SubjectId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.FaceCount != 0) {
        FaceCount = other.FaceCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SubjectId = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            FaceCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EnrollmentListResponse : pb::IMessage<EnrollmentListResponse> {
    private static readonly pb::MessageParser<EnrollmentListResponse> _parser = new pb::MessageParser<EnrollmentListResponse>(() => new EnrollmentListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnrollmentListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnrollmentListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnrollmentListResponse(EnrollmentListResponse other) : this() {
      galleryName_ = other.galleryName_;
      enrollments_ = other.enrollments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnrollmentListResponse Clone() {
      return new EnrollmentListResponse(this);
    }

    /// <summary>Field number for the "gallery_name" field.</summary>
    public const int GalleryNameFieldNumber = 1;
    private string galleryName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GalleryName {
      get { return galleryName_; }
      set {
        galleryName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enrollments" field.</summary>
    public const int EnrollmentsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Faro.Proto.EnrollmentInfo> _repeated_enrollments_codec
        = pb::FieldCodec.ForMessage(18, global::Faro.Proto.EnrollmentInfo.Parser);
    private readonly pbc::RepeatedField<global::Faro.Proto.EnrollmentInfo> enrollments_ = new pbc::RepeatedField<global::Faro.Proto.EnrollmentInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Faro.Proto.EnrollmentInfo> Enrollments {
      get { return enrollments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnrollmentListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnrollmentListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GalleryName != other.GalleryName) return false;
      if(!enrollments_.Equals(other.enrollments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GalleryName.Length != 0) hash ^= GalleryName.GetHashCode();
      hash ^= enrollments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GalleryName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GalleryName);
      }
      enrollments_.WriteTo(output, _repeated_enrollments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GalleryName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GalleryName);
      }
      size += enrollments_.CalculateSize(_repeated_enrollments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnrollmentListResponse other) {
      if (other == null) {
        return;
      }
      if (other.GalleryName.Length != 0) {
        GalleryName = other.GalleryName;
      }
      enrollments_.Add(other.enrollments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GalleryName = input.ReadString();
            break;
          }
          case 18: {
            enrollments_.AddEntriesFrom(input, _repeated_enrollments_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EnrollmentDeleteRequest : pb::IMessage<EnrollmentDeleteRequest> {
    private static readonly pb::MessageParser<EnrollmentDeleteRequest> _parser = new pb::MessageParser<EnrollmentDeleteRequest>(() => new EnrollmentDeleteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnrollmentDeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnrollmentDeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnrollmentDeleteRequest(EnrollmentDeleteRequest other) : this() {
      galleryName_ = other.galleryName_;
      subjectId_ = other.subjectId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnrollmentDeleteRequest Clone() {
      return new EnrollmentDeleteRequest(this);
    }

    /// <summary>Field number for the "gallery_name" field.</summary>
    public const int GalleryNameFieldNumber = 1;
    private string galleryName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GalleryName {
      get { return galleryName_; }
      set {
        galleryName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subject_id" field.</summary>
    public const int SubjectIdFieldNumber = 2;
    private string subjectId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubjectId {
      get { return subjectId_; }
      set {
        subjectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnrollmentDeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnrollmentDeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GalleryName != other.GalleryName) return false;
      if (SubjectId != other.SubjectId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GalleryName.Length != 0) hash ^= GalleryName.GetHashCode();
      if (SubjectId.Length != 0) hash ^= SubjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GalleryName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GalleryName);
      }
      if (SubjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SubjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GalleryName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GalleryName);
      }
      if (SubjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnrollmentDeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.GalleryName.Length != 0) {
        GalleryName = other.GalleryName;
      }
      if (other.SubjectId.Length != 0) {
        SubjectId = other.SubjectId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GalleryName = input.ReadString();
            break;
          }
          case 18: {
            SubjectId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GalleryInfo : pb::IMessage<GalleryInfo> {
    private static readonly pb::MessageParser<GalleryInfo> _parser = new pb::MessageParser<GalleryInfo>(() => new GalleryInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GalleryInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GalleryInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GalleryInfo(GalleryInfo other) : this() {
      galleryName_ = other.galleryName_;
      faceCount_ = other.faceCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GalleryInfo Clone() {
      return new GalleryInfo(this);
    }

    /// <summary>Field number for the "gallery_name" field.</summary>
    public const int GalleryNameFieldNumber = 1;
    private string galleryName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GalleryName {
      get { return galleryName_; }
      set {
        galleryName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "face_count" field.</summary>
    public const int FaceCountFieldNumber = 2;
    private long faceCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FaceCount {
      get { return faceCount_; }
      set {
        faceCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GalleryInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GalleryInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GalleryName != other.GalleryName) return false;
      if (FaceCount != other.FaceCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GalleryName.Length != 0) hash ^= GalleryName.GetHashCode();
      if (FaceCount != 0L) hash ^= FaceCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GalleryName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GalleryName);
      }
      if (FaceCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FaceCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GalleryName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GalleryName);
      }
      if (FaceCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FaceCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GalleryInfo other) {
      if (other == null) {
        return;
      }
      if (other.GalleryName.Length != 0) {
        GalleryName = other.GalleryName;
      }
      if (other.FaceCount != 0L) {
        FaceCount = other.FaceCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GalleryName = input.ReadString();
            break;
          }
          case 16: {
            FaceCount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GalleryList : pb::IMessage<GalleryList> {
    private static readonly pb::MessageParser<GalleryList> _parser = new pb::MessageParser<GalleryList>(() => new GalleryList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GalleryList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GalleryList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GalleryList(GalleryList other) : this() {
      galleries_ = other.galleries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GalleryList Clone() {
      return new GalleryList(this);
    }

    /// <summary>Field number for the "galleries" field.</summary>
    public const int GalleriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Faro.Proto.GalleryInfo> _repeated_galleries_codec
        = pb::FieldCodec.ForMessage(10, global::Faro.Proto.GalleryInfo.Parser);
    private readonly pbc::RepeatedField<global::Faro.Proto.GalleryInfo> galleries_ = new pbc::RepeatedField<global::Faro.Proto.GalleryInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Faro.Proto.GalleryInfo> Galleries {
      get { return galleries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GalleryList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GalleryList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!galleries_.Equals(other.galleries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= galleries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      galleries_.WriteTo(output, _repeated_galleries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += galleries_.CalculateSize(_repeated_galleries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GalleryList other) {
      if (other == null) {
        return;
      }
      galleries_.Add(other.galleries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            galleries_.AddEntriesFrom(input, _repeated_galleries_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Faro.Proto.FaceServiceReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
