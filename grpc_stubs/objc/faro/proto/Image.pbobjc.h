// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: faro/proto/image.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum Image_DataType

typedef GPB_ENUM(Image_DataType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  Image_DataType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  Image_DataType_Uint8 = 0,
  Image_DataType_Uint16 = 1,
  Image_DataType_Float32 = 2,
  Image_DataType_URL = 3,
  Image_DataType_Png = 4,
  Image_DataType_Jpg = 5,
};

GPBEnumDescriptor *Image_DataType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL Image_DataType_IsValidValue(int32_t value);

#pragma mark - ImageRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ImageRoot : GPBRootObject
@end

#pragma mark - Image

typedef GPB_ENUM(Image_FieldNumber) {
  Image_FieldNumber_Width = 1,
  Image_FieldNumber_Height = 2,
  Image_FieldNumber_Channels = 3,
  Image_FieldNumber_Type = 4,
  Image_FieldNumber_Description_p = 5,
  Image_FieldNumber_Data_p = 6,
  Image_FieldNumber_Date = 8,
  Image_FieldNumber_Time = 9,
  Image_FieldNumber_Module = 10,
  Image_FieldNumber_Camera = 11,
  Image_FieldNumber_Event = 12,
  Image_FieldNumber_ImageNum = 13,
  Image_FieldNumber_ExposureTime = 14,
  Image_FieldNumber_GainRaw = 15,
  Image_FieldNumber_FStop = 16,
  Image_FieldNumber_NdFilter = 17,
  Image_FieldNumber_PolarizerAng = 18,
  Image_FieldNumber_Source = 19,
};

@interface Image : GPBMessage

@property(nonatomic, readwrite) int32_t width;

@property(nonatomic, readwrite) int32_t height;

@property(nonatomic, readwrite) int32_t channels;

@property(nonatomic, readwrite) Image_DataType type;

@property(nonatomic, readwrite, copy, null_resettable) NSString *description_p;

@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;

@property(nonatomic, readwrite, copy, null_resettable) NSString *date;

@property(nonatomic, readwrite, copy, null_resettable) NSString *time;

@property(nonatomic, readwrite) int32_t module;

@property(nonatomic, readwrite) int32_t camera;

@property(nonatomic, readwrite) int32_t event;

@property(nonatomic, readwrite) int32_t imageNum;

@property(nonatomic, readwrite) float exposureTime;

@property(nonatomic, readwrite) float gainRaw;

@property(nonatomic, readwrite) float fStop;

@property(nonatomic, readwrite) float ndFilter;

@property(nonatomic, readwrite) float polarizerAng;

/** Like a filename */
@property(nonatomic, readwrite, copy, null_resettable) NSString *source;

@end

/**
 * Fetches the raw value of a @c Image's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Image_Type_RawValue(Image *message);
/**
 * Sets the raw value of an @c Image's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetImage_Type_RawValue(Image *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
