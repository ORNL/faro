/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.FaceRecord');
goog.provide('proto.FaceRecordList');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.AccessRecord');
goog.require('proto.Attribute');
goog.require('proto.Detection');
goog.require('proto.FaceTemplate');
goog.require('proto.Image');
goog.require('proto.Landmark');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FaceRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FaceRecord.repeatedFields_, null);
};
goog.inherits(proto.FaceRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.FaceRecord.displayName = 'proto.FaceRecord';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.FaceRecordList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.FaceRecordList.repeatedFields_, null);
};
goog.inherits(proto.FaceRecordList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.FaceRecordList.displayName = 'proto.FaceRecordList';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FaceRecord.repeatedFields_ = [18,19,8,10,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.FaceRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.FaceRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.FaceRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FaceRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    subjectId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    source: jspb.Message.getFieldWithDefault(msg, 4, ""),
    frame: jspb.Message.getFieldWithDefault(msg, 14, 0),
    notes: jspb.Message.getFieldWithDefault(msg, 6, ""),
    galleryKey: jspb.Message.getFieldWithDefault(msg, 15, ""),
    collectionDate: jspb.Message.getFloatingPointFieldWithDefault(msg, 16, 0.0),
    enrollmentDate: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, 0.0),
    metadataList: jspb.Message.toObjectList(msg.getMetadataList(),
    proto.Attribute.toObject, includeInstance),
    accessRecordsList: jspb.Message.toObjectList(msg.getAccessRecordsList(),
    proto.AccessRecord.toObject, includeInstance),
    view: (f = msg.getView()) && proto.Image.toObject(includeInstance, f),
    aligned: (f = msg.getAligned()) && proto.Image.toObject(includeInstance, f),
    detection: (f = msg.getDetection()) && proto.Detection.toObject(includeInstance, f),
    landmarksList: jspb.Message.toObjectList(msg.getLandmarksList(),
    proto.Landmark.toObject, includeInstance),
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.Attribute.toObject, includeInstance),
    internalDataList: jspb.Message.toObjectList(msg.getInternalDataList(),
    proto.Attribute.toObject, includeInstance),
    template: (f = msg.getTemplate()) && proto.FaceTemplate.toObject(includeInstance, f),
    score: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    searchResults: (f = msg.getSearchResults()) && proto.FaceRecordList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FaceRecord}
 */
proto.FaceRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FaceRecord;
  return proto.FaceRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FaceRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FaceRecord}
 */
proto.FaceRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubjectId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrame(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotes(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setGalleryKey(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCollectionDate(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEnrollmentDate(value);
      break;
    case 18:
      var value = new proto.Attribute;
      reader.readMessage(value,proto.Attribute.deserializeBinaryFromReader);
      msg.addMetadata(value);
      break;
    case 19:
      var value = new proto.AccessRecord;
      reader.readMessage(value,proto.AccessRecord.deserializeBinaryFromReader);
      msg.addAccessRecords(value);
      break;
    case 7:
      var value = new proto.Image;
      reader.readMessage(value,proto.Image.deserializeBinaryFromReader);
      msg.setView(value);
      break;
    case 9:
      var value = new proto.Image;
      reader.readMessage(value,proto.Image.deserializeBinaryFromReader);
      msg.setAligned(value);
      break;
    case 2:
      var value = new proto.Detection;
      reader.readMessage(value,proto.Detection.deserializeBinaryFromReader);
      msg.setDetection(value);
      break;
    case 8:
      var value = new proto.Landmark;
      reader.readMessage(value,proto.Landmark.deserializeBinaryFromReader);
      msg.addLandmarks(value);
      break;
    case 10:
      var value = new proto.Attribute;
      reader.readMessage(value,proto.Attribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    case 11:
      var value = new proto.Attribute;
      reader.readMessage(value,proto.Attribute.deserializeBinaryFromReader);
      msg.addInternalData(value);
      break;
    case 3:
      var value = new proto.FaceTemplate;
      reader.readMessage(value,proto.FaceTemplate.deserializeBinaryFromReader);
      msg.setTemplate(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setScore(value);
      break;
    case 13:
      var value = new proto.FaceRecordList;
      reader.readMessage(value,proto.FaceRecordList.deserializeBinaryFromReader);
      msg.setSearchResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FaceRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FaceRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FaceRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FaceRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubjectId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFrame();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getNotes();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getGalleryKey();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getCollectionDate();
  if (f !== 0.0) {
    writer.writeFloat(
      16,
      f
    );
  }
  f = message.getEnrollmentDate();
  if (f !== 0.0) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = message.getMetadataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      proto.Attribute.serializeBinaryToWriter
    );
  }
  f = message.getAccessRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      19,
      f,
      proto.AccessRecord.serializeBinaryToWriter
    );
  }
  f = message.getView();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.Image.serializeBinaryToWriter
    );
  }
  f = message.getAligned();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.Image.serializeBinaryToWriter
    );
  }
  f = message.getDetection();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.Detection.serializeBinaryToWriter
    );
  }
  f = message.getLandmarksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.Landmark.serializeBinaryToWriter
    );
  }
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.Attribute.serializeBinaryToWriter
    );
  }
  f = message.getInternalDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.Attribute.serializeBinaryToWriter
    );
  }
  f = message.getTemplate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.FaceTemplate.serializeBinaryToWriter
    );
  }
  f = message.getScore();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getSearchResults();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.FaceRecordList.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subject_id = 1;
 * @return {string}
 */
proto.FaceRecord.prototype.getSubjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.FaceRecord.prototype.setSubjectId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.FaceRecord.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.FaceRecord.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string source = 4;
 * @return {string}
 */
proto.FaceRecord.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.FaceRecord.prototype.setSource = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 frame = 14;
 * @return {number}
 */
proto.FaceRecord.prototype.getFrame = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.FaceRecord.prototype.setFrame = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional string notes = 6;
 * @return {string}
 */
proto.FaceRecord.prototype.getNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.FaceRecord.prototype.setNotes = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string gallery_key = 15;
 * @return {string}
 */
proto.FaceRecord.prototype.getGalleryKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.FaceRecord.prototype.setGalleryKey = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional float collection_date = 16;
 * @return {number}
 */
proto.FaceRecord.prototype.getCollectionDate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/** @param {number} value */
proto.FaceRecord.prototype.setCollectionDate = function(value) {
  jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional float enrollment_date = 17;
 * @return {number}
 */
proto.FaceRecord.prototype.getEnrollmentDate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/** @param {number} value */
proto.FaceRecord.prototype.setEnrollmentDate = function(value) {
  jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * repeated Attribute metadata = 18;
 * @return {!Array<!proto.Attribute>}
 */
proto.FaceRecord.prototype.getMetadataList = function() {
  return /** @type{!Array<!proto.Attribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Attribute, 18));
};


/** @param {!Array<!proto.Attribute>} value */
proto.FaceRecord.prototype.setMetadataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Attribute}
 */
proto.FaceRecord.prototype.addMetadata = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.Attribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.FaceRecord.prototype.clearMetadataList = function() {
  this.setMetadataList([]);
};


/**
 * repeated AccessRecord access_records = 19;
 * @return {!Array<!proto.AccessRecord>}
 */
proto.FaceRecord.prototype.getAccessRecordsList = function() {
  return /** @type{!Array<!proto.AccessRecord>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.AccessRecord, 19));
};


/** @param {!Array<!proto.AccessRecord>} value */
proto.FaceRecord.prototype.setAccessRecordsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 19, value);
};


/**
 * @param {!proto.AccessRecord=} opt_value
 * @param {number=} opt_index
 * @return {!proto.AccessRecord}
 */
proto.FaceRecord.prototype.addAccessRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 19, opt_value, proto.AccessRecord, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.FaceRecord.prototype.clearAccessRecordsList = function() {
  this.setAccessRecordsList([]);
};


/**
 * optional Image view = 7;
 * @return {?proto.Image}
 */
proto.FaceRecord.prototype.getView = function() {
  return /** @type{?proto.Image} */ (
    jspb.Message.getWrapperField(this, proto.Image, 7));
};


/** @param {?proto.Image|undefined} value */
proto.FaceRecord.prototype.setView = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.FaceRecord.prototype.clearView = function() {
  this.setView(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.FaceRecord.prototype.hasView = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Image aligned = 9;
 * @return {?proto.Image}
 */
proto.FaceRecord.prototype.getAligned = function() {
  return /** @type{?proto.Image} */ (
    jspb.Message.getWrapperField(this, proto.Image, 9));
};


/** @param {?proto.Image|undefined} value */
proto.FaceRecord.prototype.setAligned = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.FaceRecord.prototype.clearAligned = function() {
  this.setAligned(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.FaceRecord.prototype.hasAligned = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Detection detection = 2;
 * @return {?proto.Detection}
 */
proto.FaceRecord.prototype.getDetection = function() {
  return /** @type{?proto.Detection} */ (
    jspb.Message.getWrapperField(this, proto.Detection, 2));
};


/** @param {?proto.Detection|undefined} value */
proto.FaceRecord.prototype.setDetection = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.FaceRecord.prototype.clearDetection = function() {
  this.setDetection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.FaceRecord.prototype.hasDetection = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Landmark landmarks = 8;
 * @return {!Array<!proto.Landmark>}
 */
proto.FaceRecord.prototype.getLandmarksList = function() {
  return /** @type{!Array<!proto.Landmark>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Landmark, 8));
};


/** @param {!Array<!proto.Landmark>} value */
proto.FaceRecord.prototype.setLandmarksList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.Landmark=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Landmark}
 */
proto.FaceRecord.prototype.addLandmarks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.Landmark, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.FaceRecord.prototype.clearLandmarksList = function() {
  this.setLandmarksList([]);
};


/**
 * repeated Attribute attributes = 10;
 * @return {!Array<!proto.Attribute>}
 */
proto.FaceRecord.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.Attribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Attribute, 10));
};


/** @param {!Array<!proto.Attribute>} value */
proto.FaceRecord.prototype.setAttributesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Attribute}
 */
proto.FaceRecord.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.Attribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.FaceRecord.prototype.clearAttributesList = function() {
  this.setAttributesList([]);
};


/**
 * repeated Attribute internal_data = 11;
 * @return {!Array<!proto.Attribute>}
 */
proto.FaceRecord.prototype.getInternalDataList = function() {
  return /** @type{!Array<!proto.Attribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Attribute, 11));
};


/** @param {!Array<!proto.Attribute>} value */
proto.FaceRecord.prototype.setInternalDataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Attribute}
 */
proto.FaceRecord.prototype.addInternalData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.Attribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.FaceRecord.prototype.clearInternalDataList = function() {
  this.setInternalDataList([]);
};


/**
 * optional FaceTemplate template = 3;
 * @return {?proto.FaceTemplate}
 */
proto.FaceRecord.prototype.getTemplate = function() {
  return /** @type{?proto.FaceTemplate} */ (
    jspb.Message.getWrapperField(this, proto.FaceTemplate, 3));
};


/** @param {?proto.FaceTemplate|undefined} value */
proto.FaceRecord.prototype.setTemplate = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.FaceRecord.prototype.clearTemplate = function() {
  this.setTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.FaceRecord.prototype.hasTemplate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float score = 12;
 * @return {number}
 */
proto.FaceRecord.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/** @param {number} value */
proto.FaceRecord.prototype.setScore = function(value) {
  jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional FaceRecordList search_results = 13;
 * @return {?proto.FaceRecordList}
 */
proto.FaceRecord.prototype.getSearchResults = function() {
  return /** @type{?proto.FaceRecordList} */ (
    jspb.Message.getWrapperField(this, proto.FaceRecordList, 13));
};


/** @param {?proto.FaceRecordList|undefined} value */
proto.FaceRecord.prototype.setSearchResults = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.FaceRecord.prototype.clearSearchResults = function() {
  this.setSearchResults(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.FaceRecord.prototype.hasSearchResults = function() {
  return jspb.Message.getField(this, 13) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.FaceRecordList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.FaceRecordList.prototype.toObject = function(opt_includeInstance) {
  return proto.FaceRecordList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.FaceRecordList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FaceRecordList.toObject = function(includeInstance, msg) {
  var f, obj = {
    faceRecordsList: jspb.Message.toObjectList(msg.getFaceRecordsList(),
    proto.FaceRecord.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.FaceRecordList}
 */
proto.FaceRecordList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.FaceRecordList;
  return proto.FaceRecordList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.FaceRecordList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.FaceRecordList}
 */
proto.FaceRecordList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.FaceRecord;
      reader.readMessage(value,proto.FaceRecord.deserializeBinaryFromReader);
      msg.addFaceRecords(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.FaceRecordList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.FaceRecordList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.FaceRecordList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.FaceRecordList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFaceRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.FaceRecord.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FaceRecord face_records = 1;
 * @return {!Array<!proto.FaceRecord>}
 */
proto.FaceRecordList.prototype.getFaceRecordsList = function() {
  return /** @type{!Array<!proto.FaceRecord>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.FaceRecord, 1));
};


/** @param {!Array<!proto.FaceRecord>} value */
proto.FaceRecordList.prototype.setFaceRecordsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.FaceRecord=} opt_value
 * @param {number=} opt_index
 * @return {!proto.FaceRecord}
 */
proto.FaceRecordList.prototype.addFaceRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.FaceRecord, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.FaceRecordList.prototype.clearFaceRecordsList = function() {
  this.setFaceRecordsList([]);
};


