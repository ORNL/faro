<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: faro/proto/face_service.proto

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>ExtractOptions</code>
 */
class ExtractOptions extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string algorithm_id = 1;</code>
     */
    private $algorithm_id = '';
    /**
     * log the image on the server - Useful for debugging and record keeping
     *
     * Generated from protobuf field <code>bool save_request = 2;</code>
     */
    private $save_request = false;
    /**
     * Save or print more info on the server side
     *
     * Generated from protobuf field <code>bool debug = 3;</code>
     */
    private $debug = false;
    /**
     * Used for passing algorithm specific options
     *
     * Generated from protobuf field <code>repeated .Attribute attributes = 8;</code>
     */
    private $attributes;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $algorithm_id
     *     @type bool $save_request
     *           log the image on the server - Useful for debugging and record keeping
     *     @type bool $debug
     *           Save or print more info on the server side
     *     @type \Attribute[]|\Google\Protobuf\Internal\RepeatedField $attributes
     *           Used for passing algorithm specific options
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Faro\Proto\FaceService::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string algorithm_id = 1;</code>
     * @return string
     */
    public function getAlgorithmId()
    {
        return $this->algorithm_id;
    }

    /**
     * Generated from protobuf field <code>string algorithm_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setAlgorithmId($var)
    {
        GPBUtil::checkString($var, True);
        $this->algorithm_id = $var;

        return $this;
    }

    /**
     * log the image on the server - Useful for debugging and record keeping
     *
     * Generated from protobuf field <code>bool save_request = 2;</code>
     * @return bool
     */
    public function getSaveRequest()
    {
        return $this->save_request;
    }

    /**
     * log the image on the server - Useful for debugging and record keeping
     *
     * Generated from protobuf field <code>bool save_request = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setSaveRequest($var)
    {
        GPBUtil::checkBool($var);
        $this->save_request = $var;

        return $this;
    }

    /**
     * Save or print more info on the server side
     *
     * Generated from protobuf field <code>bool debug = 3;</code>
     * @return bool
     */
    public function getDebug()
    {
        return $this->debug;
    }

    /**
     * Save or print more info on the server side
     *
     * Generated from protobuf field <code>bool debug = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setDebug($var)
    {
        GPBUtil::checkBool($var);
        $this->debug = $var;

        return $this;
    }

    /**
     * Used for passing algorithm specific options
     *
     * Generated from protobuf field <code>repeated .Attribute attributes = 8;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAttributes()
    {
        return $this->attributes;
    }

    /**
     * Used for passing algorithm specific options
     *
     * Generated from protobuf field <code>repeated .Attribute attributes = 8;</code>
     * @param \Attribute[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAttributes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Attribute::class);
        $this->attributes = $arr;

        return $this;
    }

}

