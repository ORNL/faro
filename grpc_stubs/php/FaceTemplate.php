<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: faro/proto/face_service.proto

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>FaceTemplate</code>
 */
class FaceTemplate extends \Google\Protobuf\Internal\Message
{
    /**
     * Typically just populate one of these fields.
     *
     * Generated from protobuf field <code>.Vector data = 1;</code>
     */
    private $data = null;
    /**
     * General storage.  Can be used for raw data templates from commercial systems.
     *
     * Generated from protobuf field <code>bytes buffer = 2;</code>
     */
    private $buffer = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Vector $data
     *           Typically just populate one of these fields.
     *     @type string $buffer
     *           General storage.  Can be used for raw data templates from commercial systems.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Faro\Proto\FaceService::initOnce();
        parent::__construct($data);
    }

    /**
     * Typically just populate one of these fields.
     *
     * Generated from protobuf field <code>.Vector data = 1;</code>
     * @return \Vector
     */
    public function getData()
    {
        return $this->data;
    }

    /**
     * Typically just populate one of these fields.
     *
     * Generated from protobuf field <code>.Vector data = 1;</code>
     * @param \Vector $var
     * @return $this
     */
    public function setData($var)
    {
        GPBUtil::checkMessage($var, \Vector::class);
        $this->data = $var;

        return $this;
    }

    /**
     * General storage.  Can be used for raw data templates from commercial systems.
     *
     * Generated from protobuf field <code>bytes buffer = 2;</code>
     * @return string
     */
    public function getBuffer()
    {
        return $this->buffer;
    }

    /**
     * General storage.  Can be used for raw data templates from commercial systems.
     *
     * Generated from protobuf field <code>bytes buffer = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setBuffer($var)
    {
        GPBUtil::checkString($var, False);
        $this->buffer = $var;

        return $this;
    }

}

