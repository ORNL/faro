FROM nvidia/cuda:9.0-cudnn7-runtime-ubuntu16.04 AS faro_server_fhwa 
MAINTAINER Nisha Srinivas (srinivasn1@ornl.gov)


RUN mkdir /faro
RUN cd /faro/
WORKDIR /faro


RUN apt-get update && apt-get install -y vim git wget cmake lsof unzip libgl1-mesa-glx libgtk2.0-dev 

###################################################################
#                      INSTALL DEPENDENCIES 
###################################################################

#*******************************************
#
# Image Arguments and Environment Variables 
#
#*******************************************

# Specifies where Anaconda will be installed.
ENV CONDA_PATH=/opt/anaconda3

# Specifies the environment name to use.
ENV ENVIRONMENT_NAME=fhwa_faro_server

#*******************************************
#
# General initializations 
#
#*******************************************

# Set default shell to bash for this session.
# By default CUDA image uses dash (/bin/sh -> dash) 
SHELL ["/bin/bash", "-c"]

#*******************************************
#
# Install and Prepare Anaconda 
#
#*******************************************

# curl is required to download Anaconda.
RUN apt-get update && apt-get install curl -y

# Download and install Anaconda.
RUN cd /tmp && curl -O https://repo.anaconda.com/archive/Anaconda3-2019.07-Linux-x86_64.sh
RUN chmod +x /tmp/Anaconda3-2019.07-Linux-x86_64.sh
RUN mkdir /root/.conda
RUN bash -c "/tmp/Anaconda3-2019.07-Linux-x86_64.sh -b -p ${CONDA_PATH}"

# Initializes Conda for shell interaction.
RUN ${CONDA_PATH}/bin/conda init bash

# Upgrade Conda to the latest version
RUN ${CONDA_PATH}/bin/conda update -n base -c defaults conda -y

# Create the working environment and setup its activation on start.
RUN ${CONDA_PATH}/bin/conda create --name ${ENVIRONMENT_NAME} -y
RUN echo conda activate ${ENVIRONMENT_NAME} >> /root/.bashrc
#*******************************************
#
# Install packages from environment.yml 
#
#*******************************************

# Copy environment.yml to /tmp
COPY environment.yml /tmp/

# This statement illustrates how to install packages using environment.yml on image creation.

# Update the working environment if USE_ENVIRONMENT_FILE is true.
RUN . ${CONDA_PATH}/bin/activate ${ENVIRONMENT_NAME} \
  && conda env update --file /tmp/environment.yml --prune

RUN . ${CONDA_PATH}/bin/activate ${ENVIRONMENT_NAME} && \
    pip install mxnet-cu90==1.5.1.post0


####################################################################
##                        INSTALL FARO
####################################################################
#
## Increment the build to rerun from this point on...
ENV FARO_DOCKER_BUILD="0001"

COPY . ./

ENV FARO_STORAGE="/faro/faro_storage"

RUN mkdir $FARO_STORAGE

EXPOSE 50030

ENV PYTHONPATH="/faro/src"


####################################################################
#BUILD CLIENT
####################################################################

FROM faro_server_fhwa AS faro_client_fhwa

COPY docker-entrypoint.sh /usr/local/bin
RUN chmod 777 /usr/local/bin/docker-entrypoint.sh \
    && ln -s /usr/local/bin/docker-entrypoint.sh /

ENTRYPOINT ["docker-entrypoint.sh"]

